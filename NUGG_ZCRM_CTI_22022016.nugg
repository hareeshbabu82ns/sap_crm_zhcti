<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZCRM_CTI_22022016">
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_WINDOW">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_MAINWINDOW0_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="CALL_OUTBOUND_PLUG"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="CALL_OUTBOUND_PLUG" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CALL_OUTBOUND_PLUG.

    data: LV_PLUG_METHOD type SEOCMPNAME.

    concatenate &apos;OP_&apos; IV_OUTBOUND_PLUG into LV_PLUG_METHOD.
    translate LV_PLUG_METHOD to upper case.               &quot;#EC SYNTCHAR

    try.
        if IV_DATA_COLLECTION is bound.
          call method (LV_PLUG_METHOD)
            EXPORTING
              IV_DATA_COLLECTION = IV_DATA_COLLECTION.
        else.
          call method (LV_PLUG_METHOD).
        endif.
      catch CX_SY_DYN_CALL_ERROR.
        raise exception type CX_BSP_WD_INCORRECT_IMPLEMENT
          exporting
            TEXTID     =
              CX_BSP_WD_INCORRECT_IMPLEMENT=&gt;WINDOW_PLUG_UNDEFINED
            CONTROLLER = ME-&gt;VIEW_ID
            PLUG       = IV_OUTBOUND_PLUG.
    endtry.

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="IP_NEW" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="IP_NEW" SCONAME="IV_COLLECTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_BOL_BO_COL" PAROPTIONL="X"/>
   <source>method IP_NEW.
* Added by wizard: Inbound plug &apos;NEW&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="IP_SHOWDETAILS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="IP_SHOWDETAILS" SCONAME="IV_COLLECTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_BOL_BO_COL" PAROPTIONL="X"/>
   <source>method IP_SHOWDETAILS.
* Added by wizard: Inbound plug &apos;SHOWDETAILS&apos;

endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_MAINWINDOW0_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.


* create context nodes


endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_IMPL" REFCLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_IMPL" REFCLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" VERSION="1" MTDNAME="DO_INIT_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" CMPNAME="DO_INIT_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD do_init_context.

*******test the overview page with sample query results*************
  DATA: lr_qs TYPE REF TO cl_crm_bol_query_service,
        ls_search TYPE zcti_st_course_search,
        lr_results TYPE REF TO if_bol_bo_col,
        lr_entity type REF TO cl_crm_bol_entity.
  &quot;initiate query service
  lr_qs = cl_crm_bol_query_service=&gt;get_instance( zcti_cl_utils=&gt;c_objil_course_search ).
  ls_search-id = 11.
  lr_qs-&gt;set_properties( ls_search ).

  lr_results = lr_qs-&gt;get_query_result( ).
  lr_entity ?= lr_results-&gt;get_first( ).

*  me-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;add( lr_entity ).
**********************************************************************

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" CMPNAME="CONTROLLER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;BSPWDComponent&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).
    controller_id = controller.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT" CMPNAME="COURSE" VERSION="1" LANGU="E" DESCRIPT="Context node" EXPOSURE="2" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONE0_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT" CMPNAME="ZCOURSE" VERSION="1" LANGU="E" DESCRIPT="Type reference for wizard created context node" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONE0_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.
* create context nodes

* Added by wizard
CREATE_COURSE( ).
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CTXT" CMPNAME="CREATE_COURSE" VERSION="1" LANGU="E" DESCRIPT="Create (and bind) context node COURSE" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_COURSE.
    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,    &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.    &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_BSPWDCOMPONE0_CN00&apos;

        model_id       = &apos;COURSE&apos; ). &quot;#EC NOTEXT
    COURSE ?= model.
    CLEAR model.

* bind to custom controller

  owner-&gt;do_context_node_binding(
           iv_controller_type = CL_BSP_WD_CONTROLLER=&gt;CO_TYPE_CUSTOM
           iv_name =

           &apos;ZCTI_COURSE_OV/CourseCuCo&apos; &quot;#EC NOTEXT

           iv_target_node_name = &apos;COURSE&apos;
           iv_node_2_bind = COURSE ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_RESULTSVIEW">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_IMPL" CMPNAME="GT_BUTTONS" VERSION="1" LANGU="E" DESCRIPT="Table of Buttons in Table View Header" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_THTMLB_BUTTON_T" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_RESULTSVIEW" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_RESULTSVIEW" VERSION="1" MTDNAME="DO_PREPARE_OUTPUT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_RESULTSVIEW" VERSION="1" MTDNAME="EH_ONNEW"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_RESULTSVIEW" VERSION="1" MTDNAME="EH_ONTODETAILS"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_RESULTSVIEW" VERSION="1" MTDNAME="OP_NEW"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_RESULTSVIEW" VERSION="1" MTDNAME="OP_TODETAILS"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="DO_PREPARE_OUTPUT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD do_prepare_output.
  CALL METHOD super-&gt;do_prepare_output
    EXPORTING
      iv_first_time = iv_first_time.

  DATA: ls_button  TYPE crmt_thtmlb_button.

  FIELD-SYMBOLS: &lt;fs_button&gt; TYPE crmt_thtmlb_button.

  IF gt_buttons IS INITIAL.
    ls_button-id = &apos;NEW&apos;.
    ls_button-text = &apos;New Course&apos;.
    ls_button-type     = cl_thtmlb_util=&gt;gc_icon_new.
    ls_button-on_click = &apos;NEW&apos;.                             &quot;#EC NOTEXT
*    ls_button-tooltip  = cl_wd_utilities=&gt;get_otr_text_by_alias( &apos;CRM_UIU_BP/BP_NEW&apos; ).
    ls_button-enabled  = abap_true.
    APPEND ls_button TO gt_buttons.
    CLEAR ls_button.
  ELSE.
*    LOOP AT gt_buttons ASSIGNING &lt;fs_button&gt;.
*      &lt;fs_button&gt;-enabled  = me-&gt;view_group_context-&gt;is_view_in_display_mode( me ).
*    ENDLOOP.
  ENDIF.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONNEW" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD eh_onnew.

  DATA: lr_comp TYPE REF TO zl_zcti_cou_bspwdcomponen_impl,
        lr_core TYPE REF TO cl_crm_bol_core,
        lt_params TYPE crmt_name_value_pair_tab,
        lr_course TYPE REF TO cl_crm_bol_entity,
        lr_factory TYPE REF TO cl_crm_bol_entity_factory.

  lr_comp ?= me-&gt;comp_controller.

  &quot;get BOL Core Instance
  lr_core = cl_crm_bol_core=&gt;get_instance( ).
  &quot;get Entity Factory
  lr_factory = lr_core-&gt;get_entity_factory( zcti_cl_utils=&gt;c_objil_course ).
  &quot;get parameters for create
  lt_params = lr_factory-&gt;get_parameter_table( ).
  &quot;fill the parameter if required

  &quot;create Entity in API buffer
  lr_course = lr_factory-&gt;create( lt_params ).

  &quot;add newly created intity to Component Controller
  lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;clear( ).
  lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;add( lr_course ).

  &quot;update buffers
  lr_core-&gt;modify( ).

  &quot;finally call View OutBound Plug
  op_new( ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONTODETAILS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD eh_ontodetails.
  DATA: lr_comp TYPE REF TO zl_zcti_cou_bspwdcomponen_impl,
        lr_course TYPE REF TO cl_crm_bol_entity,
        lv_index TYPE i,
        lr_collection TYPE REF TO if_bol_bo_col.

  &quot;find index of the clicked link
  cl_thtmlb_util=&gt;get_event_info( EXPORTING iv_event = htmlb_event_ex
                                  IMPORTING ev_index = lv_index ).
*  me-&gt;typed_context-&gt;results-&gt;collection_wrapper-&gt;mark( iv_index = lv_index ).

  &quot;get entry for the clicked index
  lr_course ?= me-&gt;typed_context-&gt;results-&gt;collection_wrapper-&gt;find( iv_index = lv_index ).

  lr_comp ?= me-&gt;comp_controller.

  CHECK lr_course IS BOUND.
  &quot;add selected entity to Component Controller
  lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;clear( ).
  lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;add( lr_course ).

  &quot;add selected entity to collection to pass through plugs
  CREATE OBJECT lr_collection TYPE cl_crm_bol_bo_col.
  lr_collection-&gt;add( lr_course ).

  &quot;call main window outbound plug
  op_todetails( lr_collection ).
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="OP_NEW" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD op_new.
  DATA: lr_comp TYPE REF TO zl_zcti_cou_bspwdcomponen_impl,
        lr_window TYPE REF TO cl_bsp_wd_window,
        lr_col TYPE REF TO cl_crm_bol_bo_col,
        lr_bo TYPE REF TO if_bol_bo_property_access.

  lr_comp ?= me-&gt;comp_controller.

  &quot;get current entity
  lr_bo = lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;get_current( ).

  &quot;create collecction for passing data through outbound plug
  CREATE OBJECT lr_col.

  IF lr_bo IS BOUND.
    lr_window = me-&gt;view_manager-&gt;get_window_controller( ).
    lr_col-&gt;if_bol_bo_col~add( lr_bo ).
    lr_window-&gt;call_outbound_plug( iv_outbound_plug = &apos;NEW&apos; iv_data_collection = lr_col ).
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="OP_TODETAILS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD op_todetails.
  DATA: lr_comp TYPE REF TO zl_zcti_cou_bspwdcomponen_impl,
      lr_window TYPE REF TO cl_bsp_wd_window,
      lr_col TYPE REF TO cl_crm_bol_bo_col,
      lr_bo TYPE REF TO if_bol_bo_property_access.

*  lr_comp ?= me-&gt;comp_controller.
*
*  &quot;get current entity
*  lr_bo = lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;get_current( ).
*
*  &quot;create collecction for passing data through outbound plug
*  CREATE OBJECT lr_col.
*
*  IF lr_bo IS BOUND.
  lr_window = me-&gt;view_manager-&gt;get_window_controller( ).
*    lr_col-&gt;if_bol_bo_col~add( lr_bo ).
  lr_window-&gt;call_outbound_plug( iv_outbound_plug = &apos;DETAILS&apos; iv_data_collection = iv_data_collection ).
*  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_RESULTSVIEW_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="VIEW" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;ResultsView.htm&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_HANDLE_DATA"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_HANDLE_EVENT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_INIT_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_PREPARE_OUTPUT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="SET_MODELS"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).

    view_name = view.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_HANDLE_DATA" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_HANDLE_DATA.


    super-&gt;do_handle_data( form_fields     = form_fields
                           global_messages = global_messages ).


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_HANDLE_EVENT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_HANDLE_EVENT.
* Eventhandler dispatching

    CASE htmlb_event_ex-&gt;event_server_name.

*     Added by wizard
      WHEN &apos;TODETAILS&apos;.                                     &quot;#EC NOTEXT
        EH_ONTODETAILS( htmlb_event    = htmlb_event
                    htmlb_event_ex = htmlb_event_ex ).

*     Added by wizard
      WHEN &apos;NEW&apos;.                                           &quot;#EC NOTEXT
        EH_ONNEW( htmlb_event    = htmlb_event
                    htmlb_event_ex = htmlb_event_ex ).

      WHEN &apos;select&apos;.                                        &quot;#EC NOTEXT
        eh_onSelect(
                  htmlb_event    = htmlb_event
                  htmlb_event_ex = htmlb_event_ex ).

      WHEN &apos;sort&apos;.                                          &quot;#EC NOTEXT
        eh_onSort(
                  htmlb_event    = htmlb_event
                  htmlb_event_ex = htmlb_event_ex ).

      WHEN OTHERS.
    ENDCASE.
endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_INIT_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_INIT_CONTEXT.

*   set initial selection mode for all tables



    typed_context-&gt;RESULTS-&gt;set_selection_mode(

      IV_SELECTION_MODE = CL_BSP_WD_CONTEXT_NODE_TV=&gt;SELMODE_SINGLE

    ).



endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_PREPARE_OUTPUT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_PREPARE_OUTPUT.

*   build all dummy tables


    typed_context-&gt;RESULTS-&gt;build_table( ).



endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONNEW" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONNEW" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONNEW" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONNEW.
* Added by wizard: Handler for event &apos;NEW&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONSELECT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONSELECT" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONSELECT" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONSELECT.


    data: lv_event TYPE REF TO cl_htmlb_event_tableview.

    lv_event ?= htmlb_event.

    me-&gt;typed_context-&gt;RESULTS-&gt;eh_on_row_selection(
       iv_htmlb_event    = lv_event
       iv_htmlb_event_ex = htmlb_event_ex ).



endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONSORT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONSORT" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONSORT" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONSORT.


    me-&gt;typed_context-&gt;RESULTS-&gt;eh_on_sort(
       iv_htmlb_event    = htmlb_event
       iv_htmlb_event_ex = htmlb_event_ex ).



endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONTODETAILS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONTODETAILS" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="EH_ONTODETAILS" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONTODETAILS.
* Added by wizard: Handler for event &apos;TODETAILS&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="OP_NEW" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="OP_NEW" SCONAME="IV_DATA_COLLECTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_BOL_BO_COL" PAROPTIONL="X"/>
   <source>method OP_NEW.
* Added by wizard: Outbound plug &apos;NEW&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="OP_TODETAILS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW" CMPNAME="OP_TODETAILS" SCONAME="IV_DATA_COLLECTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_BOL_BO_COL" PAROPTIONL="X"/>
   <source>method OP_TODETAILS.
* Added by wizard: Outbound plug &apos;TODETAILS&apos;

endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="SET_MODELS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method SET_MODELS.

* Set the models for output

    view-&gt;set_attribute(
        name   = &apos;RESULTS&apos;                                  &quot;#EC NOTEXT
        value  = typed_context-&gt;RESULTS ).



endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.

*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
            iv_controller = me
            iv_type = &apos;ZL_ZCTI_COU_RESULTSVIEW_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE_TV">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE_TV" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE_TV" VERSION="1" MTDNAME="GET_TABLE_LINE_SAMPLE"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" CMPNAME="GET_P_ID" VERSION="1" LANGU="E" DESCRIPT="Templatemethode für Feldeigenschaften Getter" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" CMPNAME="GET_P_ID" SCONAME="IV_PROPERTY" VERSION="1" LANGU="E" DESCRIPT="Feldeigenschaft -&gt; Siehe Interfacekonstanten" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" CMPNAME="GET_P_ID" SCONAME="IV_INDEX" VERSION="1" LANGU="E" DESCRIPT="Zeilenindex bei Tabelle" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" CMPNAME="GET_P_ID" SCONAME="IV_DISPLAY_MODE" VERSION="1" LANGU="E" DESCRIPT="Display Mode?" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CN00" CMPNAME="GET_P_ID" SCONAME="RV_VALUE" VERSION="1" LANGU="E" DESCRIPT="Wert" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD get_p_id.
  CASE iv_property.
    WHEN if_bsp_wd_model_setter_getter=&gt;fp_fieldtype.
      rv_value = cl_bsp_dlc_view_descriptor=&gt;field_type_event_link.
    WHEN if_bsp_wd_model_setter_getter=&gt;fp_onclick.
      rv_value = &apos;TODETAILS&apos;.
    WHEN OTHERS.
  ENDCASE.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT_NODE_TV" CMPNAME="GET_TABLE_LINE_SAMPLE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method GET_TABLE_LINE_SAMPLE.

    TYPES: BEGIN OF line.

    include type ZCTI_ST_COURSE_ATTR.

    TYPES:

           END OF line.

    CREATE DATA rv_sample TYPE line.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CTXT" CMPNAME="RESULTS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_RESULTSVIEW_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.


* create context nodes


    CREATE_RESULTS( ).



endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_RESULTSVIEW_CTXT" CMPNAME="CREATE_RESULTS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_RESULTS.

    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,           &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.           &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_RESULTSVIEW_CN00&apos;

        model_id       = &apos;RESULTS&apos; ).                       &quot;#EC NOTEXT
    RESULTS ?= model.
    CLEAR model.

* bind to custom controller

    owner-&gt;do_context_node_binding(
             iv_controller_type = CL_BSP_WD_CONTROLLER=&gt;CO_TYPE_CUSTOM
             iv_name =

             &apos;ZCTI_COURSE_RES/CourseCuCo&apos;                   &quot;#EC NOTEXT

             iv_target_node_name = &apos;RESULTS&apos;
             iv_node_2_bind = RESULTS ).


endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CN01" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CN01" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CN01" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO_CN01" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO_CN01" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourseSearch&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO_CN01" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_SEARCHVIEW">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_SEARCHVIEW" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_SEARCHVIEW" VERSION="1" MTDNAME="DO_INIT_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_SEARCHVIEW" VERSION="1" MTDNAME="EH_ONCLEAR"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_IMPL" REFCLSNAME="ZL_ZCTI_COU_SEARCHVIEW" VERSION="1" MTDNAME="EH_ONSEARCH"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="DO_INIT_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD do_init_context.

  super-&gt;do_init_context( ).

  DATA: lr_qs TYPE REF TO cl_crm_bol_query_service.

  &quot;initiate query service
  lr_qs = cl_crm_bol_query_service=&gt;get_instance( zcti_cl_utils=&gt;c_objil_course_search ).

  &quot;set query service to context
  me-&gt;typed_context-&gt;search-&gt;collection_wrapper-&gt;add( lr_qs ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONCLEAR" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD eh_onclear.
  DATA: lr_qs TYPE REF TO cl_crm_bol_query_service.

  &quot;clear search parameters
  me-&gt;typed_context-&gt;search-&gt;collection_wrapper-&gt;clear( ).

  &quot;initiate query service
  lr_qs = cl_crm_bol_query_service=&gt;get_instance( zcti_cl_utils=&gt;c_objil_course_search ).

  &quot;set query service to context
  me-&gt;typed_context-&gt;search-&gt;collection_wrapper-&gt;add( lr_qs ).


  &quot;clear existing results first, which will be cascaded to CuCo
  me-&gt;typed_context-&gt;results-&gt;collection_wrapper-&gt;clear( ).
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSEARCH" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD eh_onsearch.
  DATA: lr_qs TYPE REF TO cl_crm_bol_query_service,
        lr_results TYPE REF TO if_bol_bo_col.

  &quot;get query service with parameters
  lr_qs ?= me-&gt;typed_context-&gt;search-&gt;collection_wrapper-&gt;get_current( ).

  &quot;clear existing results first, which will be cascaded to CuCo
  me-&gt;typed_context-&gt;results-&gt;collection_wrapper-&gt;clear( ).

  &quot;initiate the search
  lr_results = lr_qs-&gt;get_query_result( ).

  &quot;set the results to context
  me-&gt;typed_context-&gt;results-&gt;set_collection( lr_results ).


ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_SEARCHVIEW_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="VIEW" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;SearchView.htm&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_HANDLE_DATA"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_HANDLE_EVENT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="SET_MODELS"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).

    view_name = view.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_HANDLE_DATA" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_HANDLE_DATA.


    super-&gt;do_handle_data( form_fields     = form_fields
                           global_messages = global_messages ).


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_HANDLE_EVENT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_HANDLE_EVENT.
* Eventhandler dispatching

    CASE htmlb_event_ex-&gt;event_server_name.

*     Added by wizard
      WHEN &apos;CLEAR&apos;.                                         &quot;#EC NOTEXT
        EH_ONCLEAR( htmlb_event    = htmlb_event
                    htmlb_event_ex = htmlb_event_ex ).

*     Added by wizard
      WHEN &apos;SEARCH&apos;.                                        &quot;#EC NOTEXT
        EH_ONSEARCH( htmlb_event    = htmlb_event
                    htmlb_event_ex = htmlb_event_ex ).

      WHEN &apos;select&apos;.                                        &quot;#EC NOTEXT
        eh_onSelect(
                  htmlb_event    = htmlb_event
                  htmlb_event_ex = htmlb_event_ex ).

      WHEN &apos;sort&apos;.                                          &quot;#EC NOTEXT
        eh_onSort(
                  htmlb_event    = htmlb_event
                  htmlb_event_ex = htmlb_event_ex ).

      WHEN OTHERS.
    ENDCASE.
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONCLEAR" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONCLEAR" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONCLEAR" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONCLEAR.
* Added by wizard: Handler for event &apos;CLEAR&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSEARCH" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSEARCH" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSEARCH" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONSEARCH.
* Added by wizard: Handler for event &apos;SEARCH&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSELECT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSELECT" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSELECT" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONSELECT.


*   put in your eventhandlercoding here...




endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSORT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSORT" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_SEARCHVIEW" CMPNAME="EH_ONSORT" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONSORT.




endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="SET_MODELS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method SET_MODELS.
* Set the models for output

    view-&gt;set_attribute(
        name   = &apos;SEARCH&apos;                                   &quot;#EC NOTEXT
        value  = typed_context-&gt;SEARCH ).

* Added by wizard
    view-&gt;set_attribute(
          name = &apos;RESULTS&apos;                                  &quot;#EC NOTEXT
          value  = typed_context-&gt;RESULTS ).
endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.

*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
            iv_controller = me
            iv_type = &apos;ZL_ZCTI_COU_SEARCHVIEW_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CN00" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CN00" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourseSearch&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" CMPNAME="RESULTS" VERSION="1" LANGU="E" DESCRIPT="Context node" EXPOSURE="2" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_SEARCHVIEW_CN01" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" CMPNAME="SEARCH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_SEARCHVIEW_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" CMPNAME="ZRESULTS" VERSION="1" LANGU="E" DESCRIPT="Type reference for wizard created context node" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_SEARCHVIEW_CN01" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.
* create context nodes


    CREATE_SEARCH( ).

* Added by wizard
    CREATE_RESULTS( ).
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" CMPNAME="CREATE_RESULTS" VERSION="1" LANGU="E" DESCRIPT="Create (and bind) context node RESULTS" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_RESULTS.
    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,           &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.           &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_SEARCHVIEW_CN01&apos;

        model_id       = &apos;RESULTS&apos; ).                       &quot;#EC NOTEXT
    RESULTS ?= model.
    CLEAR model.

* Added by wizard
* bind Context Node to controller
    owner-&gt;do_context_node_binding(
    iv_controller_type = CL_BSP_WD_CONTROLLER=&gt;CO_TYPE_CUSTOM
    iv_name = &apos;ZCTI_COURSE_RES/CourseCuCo&apos;                  &quot;#EC NOTEXT
    iv_target_node_name = &apos;RESULTS&apos;
    iv_node_2_bind = RESULTS  ).
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_SEARCHVIEW_CTXT" CMPNAME="CREATE_SEARCH" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_SEARCH.
    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,           &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.           &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_SEARCHVIEW_CN00&apos;

        model_id       = &apos;SEARCH&apos; ).                        &quot;#EC NOTEXT
    SEARCH ?= model.
    CLEAR model.

* Added by wizard
* bind Context Node to controller
    owner-&gt;do_context_node_binding(
    iv_controller_type = CL_BSP_WD_CONTROLLER=&gt;CO_TYPE_CUSTOM
    iv_name = &apos;ZCTI_COURSE_RES/CourseCuCo&apos;                  &quot;#EC NOTEXT
    iv_target_node_name = &apos;SEARCH&apos;
    iv_node_2_bind = SEARCH  ).
endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSESEARCHR_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_COURSESEARCHR">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSESEARCHR_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSESEARCHR" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSESEARCHR_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" CMPNAME="VIEW" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CourseSearchResultsVS.htm&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_HANDLE_DATA"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_HANDLE_EVENT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="SET_MODELS"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_COURSESEARCHR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).

    view_name = view.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_HANDLE_DATA" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_HANDLE_DATA.


    super-&gt;do_handle_data( form_fields     = form_fields
                           global_messages = global_messages ).


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_HANDLE_EVENT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD do_handle_event.
  DATA: lv_viewname TYPE string,
        lr_viewctrl TYPE REF TO cl_bsp_wd_view_controller.
* Eventhandler dispatching

  CASE htmlb_event_ex-&gt;event_server_name.

    WHEN OTHERS.
      lv_viewname = me-&gt;get_viewarea_content( &apos;SearchVA&apos; ).
      IF lv_viewname IS NOT INITIAL.
        lr_viewctrl = me-&gt;get_subcontroller_by_viewname( lv_viewname ).
        IF lr_viewctrl IS BOUND.
          TRY.
              CALL METHOD lr_viewctrl-&gt;(&apos;DO_HANDLE_EVENT&apos;)
                EXPORTING
                  event           = event
                  htmlb_event     = htmlb_event
                  htmlb_event_ex  = htmlb_event_ex
                  global_messages = global_messages
                RECEIVING
                  global_event    = global_event.
            CATCH cx_sy_dyn_call_error.
              RETURN.
          ENDTRY.
        ENDIF.
      ENDIF.
  ENDCASE.


ENDMETHOD.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="SET_MODELS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method SET_MODELS.

* Set the models for output


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.

*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
            iv_controller = me
            iv_type = &apos;ZL_ZCTI_COU_COURSESEARCHR_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSESEARCHR_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSESEARCHR_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_COURSECUCO">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSECUCO" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO" CMPNAME="CONTROLLER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CourseCuCo&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSECUCO_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO" REFCLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSECUCO" REFCLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSECUCO" REFCLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_COURSECUCO" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).
    controller_id = controller.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_COURSECUCO_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO_CN00" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO_CN00" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" CMPNAME="RESULTS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSECUCO_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" CMPNAME="SEARCH" VERSION="1" LANGU="E" DESCRIPT="Context node" EXPOSURE="2" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSECUCO_CN01" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" CMPNAME="ZSEARCH" VERSION="1" LANGU="E" DESCRIPT="Type reference for wizard created context node" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSECUCO_CN01" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.
* create context nodes


    CREATE_RESULTS( ).

* Added by wizard
    CREATE_SEARCH( ).
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" CMPNAME="CREATE_RESULTS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_RESULTS.

    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,           &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.           &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_COURSECUCO_CN00&apos;

        model_id       = &apos;RESULTS&apos; ).                       &quot;#EC NOTEXT
    RESULTS ?= model.
    CLEAR model.


endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSECUCO_CTXT" CMPNAME="CREATE_SEARCH" VERSION="1" LANGU="E" DESCRIPT="Create (and bind) context node SEARCH" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_SEARCH.
    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,    &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.    &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_COURSECUCO_CN01&apos;

        model_id       = &apos;SEARCH&apos; ). &quot;#EC NOTEXT
    SEARCH ?= model.
    CLEAR model.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCTI_CL_UI_UTILS" VERSION="1" LANGU="E" DESCRIPT="UI Utilities Class" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCTI_CL_UI_UTILS" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <method CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT" VERSION="1" LANGU="E" DESCRIPT="Get Context from Controller" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT" SCONAME="IR_CONTROLLER" VERSION="1" LANGU="E" DESCRIPT="Controller" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_BSP_WD_CONTROLLER"/>
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT" SCONAME="IV_CONTEXT" VERSION="1" LANGU="E" DESCRIPT="which context to fetch" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT" SCONAME="RR_CONTEXT_NODE" VERSION="1" LANGU="E" DESCRIPT="Context Node" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_BSP_WD_CONTEXT_NODE"/>
   <source>METHOD GET_CONTROLLER_CONTEXT.
  DATA: lr_cc               TYPE REF TO cl_bsp_wd_controller.
  DATA: lr_context          TYPE REF TO cl_bsp_wd_context.

  FIELD-SYMBOLS: &lt;lr_context&gt; TYPE ANY.
  FIELD-SYMBOLS: &lt;lr_cn&gt; TYPE ANY.

  lr_cc ?= ir_controller.
  CHECK lr_cc IS BOUND AND iv_context IS NOT INITIAL.

  ASSIGN lr_cc-&gt;(&apos;TYPED_CONTEXT&apos;) TO &lt;lr_context&gt;.
  CHECK &lt;lr_context&gt; IS ASSIGNED.
  lr_context = &lt;lr_context&gt;.
  CHECK lr_context IS BOUND.

  ASSIGN lr_context-&gt;(iv_context) TO &lt;lr_cn&gt;.
  CHECK &lt;lr_cn&gt; IS ASSIGNED.
  rr_context_node ?= &lt;lr_cn&gt;.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT_ENTITY" VERSION="1" LANGU="E" DESCRIPT="Get Entity from Context of Controller" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT_ENTITY" SCONAME="IR_CONTROLLER" VERSION="1" LANGU="E" DESCRIPT="Controller" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_BSP_WD_CONTROLLER"/>
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT_ENTITY" SCONAME="IV_CONTEXT" VERSION="1" LANGU="E" DESCRIPT="which context to fetch" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT_ENTITY" SCONAME="IV_INDEX" VERSION="1" LANGU="E" DESCRIPT="index of entity to return" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PARVALUE="0"/>
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="GET_CONTROLLER_CONTEXT_ENTITY" SCONAME="RR_ENTITY" VERSION="1" LANGU="E" DESCRIPT="Current Entity from Context" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_CRM_BOL_ENTITY"/>
   <source>METHOD get_controller_context_entity.
  DATA: lr_cc               TYPE REF TO cl_bsp_wd_controller.
  DATA: lr_context          TYPE REF TO cl_bsp_wd_context.
  DATA: lr_cn               TYPE REF TO cl_bsp_wd_context_node.

  FIELD-SYMBOLS: &lt;lr_context&gt; TYPE ANY.
  FIELD-SYMBOLS: &lt;lr_cn&gt; TYPE ANY.

  lr_cc ?= ir_controller.
  CHECK lr_cc IS BOUND AND iv_context IS NOT INITIAL.

  ASSIGN lr_cc-&gt;(&apos;TYPED_CONTEXT&apos;) TO &lt;lr_context&gt;.
  CHECK &lt;lr_context&gt; IS ASSIGNED.
  lr_context = &lt;lr_context&gt;.
  CHECK lr_context IS BOUND.

  ASSIGN lr_context-&gt;(iv_context) TO &lt;lr_cn&gt;.
  CHECK &lt;lr_cn&gt; IS ASSIGNED.
  lr_cn ?= &lt;lr_cn&gt;.

  IF iv_index IS INITIAL. &quot; get current
    rr_entity ?= lr_cn-&gt;collection_wrapper-&gt;get_current( ).
  ELSE.
    rr_entity ?= lr_cn-&gt;collection_wrapper-&gt;find( iv_index = iv_index ).
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="SET_CONTROLLER_CONTEXT" VERSION="1" LANGU="E" DESCRIPT="Set Context of Controller" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="SET_CONTROLLER_CONTEXT" SCONAME="IR_CONTROLLER" VERSION="1" LANGU="E" DESCRIPT="BSP WD Controller" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_BSP_WD_CONTROLLER"/>
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="SET_CONTROLLER_CONTEXT" SCONAME="IV_CONTEXT" VERSION="1" LANGU="E" DESCRIPT="which context to set" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="SET_CONTROLLER_CONTEXT" SCONAME="IR_ENTITY" VERSION="1" LANGU="E" DESCRIPT="Entity" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_CRM_BOL_ENTITY"/>
   <parameter CLSNAME="ZCTI_CL_UI_UTILS" CMPNAME="SET_CONTROLLER_CONTEXT" SCONAME="IV_ONLY_THIS_ONE" VERSION="1" LANGU="E" DESCRIPT="Clear the collection before?" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_BOOLEAN" PARVALUE="ABAP_TRUE"/>
   <source>METHOD set_controller_context.
  DATA: lr_cc               TYPE REF TO cl_bsp_wd_controller.
  DATA: lr_context          TYPE REF TO cl_bsp_wd_context.
  DATA: lr_cn               TYPE REF TO cl_bsp_wd_context_node.

  FIELD-SYMBOLS: &lt;lr_context&gt; TYPE ANY.
  FIELD-SYMBOLS: &lt;lr_cn&gt; TYPE ANY.

  lr_cc ?= ir_controller.
  CHECK lr_cc IS BOUND AND iv_context IS NOT INITIAL.

  ASSIGN lr_cc-&gt;(&apos;TYPED_CONTEXT&apos;) TO &lt;lr_context&gt;.
  CHECK &lt;lr_context&gt; IS ASSIGNED.
  lr_context = &lt;lr_context&gt;.
  CHECK lr_context IS BOUND.

  ASSIGN lr_context-&gt;(iv_context) TO &lt;lr_cn&gt;.
  CHECK &lt;lr_cn&gt; IS ASSIGNED.
  lr_cn ?= &lt;lr_cn&gt;.
  CHECK lr_cn IS BOUND.

  IF iv_only_this_one = abap_true.
    lr_cn-&gt;collection_wrapper-&gt;clear( ).
    lr_cn-&gt;collection_wrapper-&gt;add( iv_entity    = ir_entity
                                    iv_set_focus = abap_true ).
  ELSE.
    IF lr_cn-&gt;collection_wrapper-&gt;find( iv_bo = ir_entity ) IS NOT BOUND.
      lr_cn-&gt;collection_wrapper-&gt;add( iv_entity    = ir_entity
                                      iv_set_focus = abap_true ).
    ENDIF.
  ENDIF.
ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CN00" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CN00" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CN00" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CN00" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW1_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW1">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW1_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW1" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW1" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_WINDOW">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_MAINWINDOW1" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_MAINWINDOW1_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW1" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW1" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="CALL_OUTBOUND_PLUG"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW1" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW1" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="CALL_OUTBOUND_PLUG" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CALL_OUTBOUND_PLUG.

    data: LV_PLUG_METHOD type SEOCMPNAME.

    concatenate &apos;OP_&apos; IV_OUTBOUND_PLUG into LV_PLUG_METHOD.
    translate LV_PLUG_METHOD to upper case.               &quot;#EC SYNTCHAR

    try.
        if IV_DATA_COLLECTION is bound.
          call method (LV_PLUG_METHOD)
            EXPORTING
              IV_DATA_COLLECTION = IV_DATA_COLLECTION.
        else.
          call method (LV_PLUG_METHOD).
        endif.
      catch CX_SY_DYN_CALL_ERROR.
        raise exception type CX_BSP_WD_INCORRECT_IMPLEMENT
          exporting
            TEXTID     =
              CX_BSP_WD_INCORRECT_IMPLEMENT=&gt;WINDOW_PLUG_UNDEFINED
            CONTROLLER = ME-&gt;VIEW_ID
            PLUG       = IV_OUTBOUND_PLUG.
    endtry.

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW1" CMPNAME="IP_NEW" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_MAINWINDOW1" CMPNAME="IP_NEW" SCONAME="IV_COLLECTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_BOL_BO_COL" PAROPTIONL="X"/>
   <source>method IP_NEW.
* Added by wizard: Inbound plug &apos;NEW&apos;

endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_MAINWINDOW1_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW1_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW1_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW1_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW1_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.


* create context nodes


endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_IMPL" REFCLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_IMPL" REFCLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" VERSION="1" MTDNAME="WD_USAGE_INITIALIZE"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" CMPNAME="WD_USAGE_INITIALIZE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD wd_usage_initialize.
  CHECK iv_usage IS BOUND.
  CASE iv_usage-&gt;usage_name.
    WHEN &apos;CuCourseDetail&apos;.
      iv_usage-&gt;bind_context_node( iv_controller_type  = cl_bsp_wd_controller=&gt;co_type_component
                                   iv_target_node_name = &apos;COURSE&apos;
                                   iv_node_2_bind      = &apos;COURSE&apos; ).

  ENDCASE.
ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" CMPNAME="CONTROLLER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;BSPWDComponent&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).
    controller_id = controller.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT" CMPNAME="COURSE" VERSION="1" LANGU="E" DESCRIPT="Context node" EXPOSURE="2" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONE1_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT" CMPNAME="ZCOURSE" VERSION="1" LANGU="E" DESCRIPT="Type reference for wizard created context node" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONE1_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.
* create context nodes

* Added by wizard
CREATE_COURSE( ).
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE1_CTXT" CMPNAME="CREATE_COURSE" VERSION="1" LANGU="E" DESCRIPT="Create (and bind) context node COURSE" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_COURSE.
    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,    &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.    &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_BSPWDCOMPONE1_CN00&apos;

        model_id       = &apos;COURSE&apos; ). &quot;#EC NOTEXT
    COURSE ?= model.
    CLEAR model.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSEHEADER_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_COURSEHEADER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSEHEADER_IMPL" CMPNAME="GT_BUTTON" VERSION="1" LANGU="E" DESCRIPT="Table of Buttons in Table View Header" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_THTMLB_BUTTON_T" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSEHEADER_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSEHEADER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSEHEADER" VERSION="1" MTDNAME="DO_PREPARE_OUTPUT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSEHEADER" VERSION="1" MTDNAME="EH_ONEDIT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="DO_PREPARE_OUTPUT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD do_prepare_output.

  CALL METHOD super-&gt;do_prepare_output
    EXPORTING
      iv_first_time = iv_first_time.

  DATA: ls_button  TYPE crmt_thtmlb_button.

  FIELD-SYMBOLS: &lt;fs_button&gt; TYPE crmt_thtmlb_button.

  IF gt_button IS INITIAL.
    ls_button-id = &apos;EDIT&apos;.
    ls_button-text = &apos;Edit&apos;.
    ls_button-type     = cl_thtmlb_util=&gt;gc_icon_edit.
    ls_button-on_click = &apos;EDIT&apos;.                            &quot;#EC NOTEXT
*    ls_button-tooltip  = cl_wd_utilities=&gt;get_otr_text_by_alias( &apos;CRM_UIU_BP/BP_NEW&apos; ).
    ls_button-enabled  = me-&gt;view_group_context-&gt;is_view_in_display_mode( me ).
    APPEND ls_button TO gt_button.
    CLEAR ls_button.
  ELSE.
    LOOP AT gt_button ASSIGNING &lt;fs_button&gt;.
      &lt;fs_button&gt;-enabled  = me-&gt;view_group_context-&gt;is_view_in_display_mode( me ).
    ENDLOOP.
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONEDIT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD eh_onedit.
  DATA: lr_entity TYPE REF TO cl_crm_bol_entity.

  me-&gt;view_group_context-&gt;set_view_editable( me ).

  lr_entity ?= me-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;get_current( ).
  CHECK lr_entity IS BOUND.

  IF lr_entity-&gt;is_locked( ) EQ abap_false.
    lr_entity-&gt;lock( ).
  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSEHEADER" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSEHEADER_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="VIEW" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CourseHeader.htm&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSEHEADER" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_HANDLE_DATA"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="DO_HANDLE_EVENT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="SET_MODELS"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER" REFCLSNAME="CL_BSP_WD_VIEW_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).

    view_name = view.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_HANDLE_DATA" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_HANDLE_DATA.


    super-&gt;do_handle_data( form_fields     = form_fields
                           global_messages = global_messages ).


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="DO_HANDLE_EVENT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_HANDLE_EVENT.
* Eventhandler dispatching

    CASE htmlb_event_ex-&gt;event_server_name.

*     Added by wizard
      WHEN &apos;EDIT&apos;.                                          &quot;#EC NOTEXT
        EH_ONEDIT( htmlb_event    = htmlb_event
                    htmlb_event_ex = htmlb_event_ex ).

      WHEN &apos;select&apos;.                                        &quot;#EC NOTEXT
        eh_onSelect(
                  htmlb_event    = htmlb_event
                  htmlb_event_ex = htmlb_event_ex ).

      WHEN &apos;sort&apos;.                                          &quot;#EC NOTEXT
        eh_onSort(
                  htmlb_event    = htmlb_event
                  htmlb_event_ex = htmlb_event_ex ).

      WHEN OTHERS.
    ENDCASE.
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONEDIT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONEDIT" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONEDIT" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONEDIT.
* Added by wizard: Handler for event &apos;EDIT&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONSELECT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONSELECT" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONSELECT" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONSELECT.


*   put in your eventhandlercoding here...




endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONSORT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONSORT" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER" CMPNAME="EH_ONSORT" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONSORT.




endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="SET_MODELS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method SET_MODELS.

* Set the models for output

    view-&gt;set_attribute(
        name   = &apos;COURSE&apos;                                   &quot;#EC NOTEXT
        value  = typed_context-&gt;COURSE ).



endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.

*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
            iv_controller = me
            iv_type = &apos;ZL_ZCTI_COU_COURSEHEADER_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_VIEW_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CN00" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CN00" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
  <method CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CN00" CMPNAME="GET_P_DETAILS" VERSION="1" LANGU="E" DESCRIPT="Templatemethode für Feldeigenschaften Getter" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CN00" CMPNAME="GET_P_DETAILS" SCONAME="IV_PROPERTY" VERSION="1" LANGU="E" DESCRIPT="Feldeigenschaft -&gt; Siehe Interfacekonstanten" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CN00" CMPNAME="GET_P_DETAILS" SCONAME="IV_INDEX" VERSION="1" LANGU="E" DESCRIPT="Zeilenindex bei Tabelle" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CN00" CMPNAME="GET_P_DETAILS" SCONAME="IV_DISPLAY_MODE" VERSION="1" LANGU="E" DESCRIPT="Display Mode?" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CN00" CMPNAME="GET_P_DETAILS" SCONAME="RV_VALUE" VERSION="1" LANGU="E" DESCRIPT="Wert" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD get_p_details.
  CASE iv_property.
    WHEN if_bsp_wd_model_setter_getter=&gt;fp_fieldtype.
      rv_value = cl_bsp_dlc_view_descriptor=&gt;field_type_textarea.
    WHEN if_bsp_wd_model_setter_getter=&gt;fp_textarea_rows.
      rv_value = 5. &quot;Number of lines in your text box
    WHEN if_bsp_wd_model_setter_getter=&gt;fp_textarea_cols.
      rv_value = 100. &quot;Number of columns in your text box
  ENDCASE.
ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CTXT" CMPNAME="COURSE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSEHEADER_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.


* create context nodes


    CREATE_COURSE( ).



endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSEHEADER_CTXT" CMPNAME="CREATE_COURSE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_COURSE.

    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,           &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.           &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_COURSEHEADER_CN00&apos;

        model_id       = &apos;COURSE&apos; ).                        &quot;#EC NOTEXT
    COURSE ?= model.
    CLEAR model.

* bind to custom controller

    owner-&gt;do_context_node_binding(
             iv_controller_type = CL_BSP_WD_CONTROLLER=&gt;CO_TYPE_CUSTOM
             iv_name =

             &apos;ZCTI_COURSE_OV/CourseCuCo&apos;                    &quot;#EC NOTEXT

             iv_target_node_name = &apos;COURSE&apos;
             iv_node_2_bind = COURSE ).


endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSEOV_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_COURSEOV">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSEOV_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSEOV" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSEOV" VERSION="1" MTDNAME="EH_ONCANCEL"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSEOV" VERSION="1" MTDNAME="EH_ONSAVE"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSEOV" VERSION="1" MTDNAME="IF_BSP_WD_TOOLBAR_CALLBACK~GET_BUTTONS"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSEOV" VERSION="1" MTDNAME="IF_BSP_WD_TOOLBAR_CALLBACK~GET_NUMBER_OF_VISIBLE_BUTTONS"/>
  </inheritance>
  <interfaceMethod CLSNAME="ZL_ZCTI_COU_COURSEOV_IMPL" CPDNAME="IF_BSP_WD_TOOLBAR_CALLBACK~GET_BUTTONS">
   <source>METHOD if_bsp_wd_toolbar_callback~get_buttons.
  DATA: ls_button TYPE crmt_thtmlb_button_ext,
        lr_entity TYPE REF TO cl_crm_bol_entity,
        lr_comp_ctrl TYPE REF TO zl_zcti_cou_bspwdcompone0_impl .

  lr_comp_ctrl ?= me-&gt;comp_controller.
  lr_entity ?= lr_comp_ctrl-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;get_current( ).

  CHECK lr_entity IS BOUND.

  CLEAR ls_button.
* DONE button
  ls_button-type     = cl_thtmlb_util=&gt;gc_icon_save.
  ls_button-on_click = &apos;SAVE&apos;.                              &quot;#EC NOTEXT
  ls_button-page_id  = me-&gt;component_id.
  ls_button-enabled  = lr_entity-&gt;is_locked( ).
  APPEND ls_button TO rt_buttons.

  CLEAR ls_button.
* DONE button
  ls_button-type     = cl_thtmlb_util=&gt;gc_icon_cancel.
  ls_button-on_click = &apos;CANCEL&apos;.                            &quot;#EC NOTEXT
  ls_button-page_id  = me-&gt;component_id.
  ls_button-enabled  = lr_entity-&gt;is_locked( ).
  APPEND ls_button TO rt_buttons.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZL_ZCTI_COU_COURSEOV_IMPL" CPDNAME="IF_BSP_WD_TOOLBAR_CALLBACK~GET_NUMBER_OF_VISIBLE_BUTTONS">
   <source>METHOD if_bsp_wd_toolbar_callback~get_number_of_visible_buttons.
  CALL METHOD super-&gt;if_bsp_wd_toolbar_callback~get_number_of_visible_buttons
    RECEIVING
      rv_result = rv_result.
  IF rv_result LT 3.
    rv_result = 3.
  ENDIF.
ENDMETHOD.</source>
  </interfaceMethod>
  <method CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="EH_ONCANCEL" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD eh_oncancel.
  DATA: lr_entity TYPE REF TO cl_crm_bol_entity,
*        lr_comp_ctrl TYPE REF TO zl_zcti_cou_bspwdcompone0_impl,
        lr_tx TYPE REF TO if_bol_transaction_context,
        lr_course TYPE REF TO cl_bsp_wd_context_node.

*  lr_comp_ctrl ?= me-&gt;comp_controller.
*  lr_entity ?= lr_comp_ctrl-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;get_current( ).

  lr_course ?= zcti_cl_ui_utils=&gt;get_controller_context( ir_controller = me-&gt;comp_controller
                                                               iv_context = &apos;COURSE&apos; ).
  lr_entity ?= lr_course-&gt;collection_wrapper-&gt;get_current( ).

*  lr_entity = zcti_cl_ui_utils=&gt;get_controller_context_entity( ir_controller = me-&gt;comp_controller
*                                                               iv_context = &apos;COURSE&apos;).

  CHECK lr_entity IS BOUND.
  lr_tx = lr_entity-&gt;get_transaction( ).
  lr_tx-&gt;revert( ).

  TRY .
      IF lr_entity-&gt;is_persistent( ) EQ abap_false. &quot;if the entity is new and not in DB yet
        me-&gt;op_default_back( ). &quot;go back
      ELSE.
*        lr_comp_ctrl-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;publish_current( ). &quot;refresh page
        lr_course-&gt;collection_wrapper-&gt;publish_current( ). &quot;refresh page
      ENDIF.
    CATCH cx_root.
      me-&gt;op_default_back( ). &quot;go back
  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="EH_ONSAVE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD eh_onsave.
  DATA: lr_entity TYPE REF TO cl_crm_bol_entity,
*        lr_comp_ctrl TYPE REF TO zl_zcti_cou_bspwdcompone0_impl,
        lr_tx TYPE REF TO if_bol_transaction_context.

*  lr_comp_ctrl ?= me-&gt;comp_controller.
*  lr_entity ?= lr_comp_ctrl-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;get_current( ).

  lr_entity = zcti_cl_ui_utils=&gt;get_controller_context_entity( ir_controller = me-&gt;comp_controller
                                                               iv_context = &apos;COURSE&apos;).

  CHECK lr_entity IS BOUND.

  lr_tx = lr_entity-&gt;get_transaction( ).
  IF lr_tx-&gt;save( ) EQ abap_true.
    lr_tx-&gt;commit( iv_keep_locks = abap_false ).
  ELSE.
    lr_tx-&gt;rollback( ).
  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSEOV" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_OVW_VIEWSET">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSEOV_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSEOV" REFCLSNAME="CL_BSP_WD_OVW_VIEWSET" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV" REFCLSNAME="CL_BSP_WD_OVW_VIEWSET" VERSION="1" MTDNAME="DO_HANDLE_EVENT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV" REFCLSNAME="CL_BSP_WD_OVW_VIEWSET" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV" REFCLSNAME="CL_BSP_WD_OVW_VIEWSET" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_OVW_VIEWSET" CMPNAME="DO_HANDLE_EVENT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DO_HANDLE_EVENT.
*   Eventhandler dispatching

    CASE htmlb_event_ex-&gt;event_server_name.

*     Added by wizard
      WHEN &apos;CANCEL&apos;.                                        &quot;#EC NOTEXT
        EH_ONCANCEL( htmlb_event    = htmlb_event
                    htmlb_event_ex = htmlb_event_ex ).

*     Added by wizard
      WHEN &apos;SAVE&apos;.                                          &quot;#EC NOTEXT
        EH_ONSAVE( htmlb_event    = htmlb_event
                    htmlb_event_ex = htmlb_event_ex ).

      WHEN OTHERS.
        global_event = super-&gt;do_handle_event( event           = event
                                               htmlb_event     = htmlb_event
                                               htmlb_event_ex  = htmlb_event_ex
                                               global_messages = global_messages ).
    ENDCASE.
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="EH_ONCANCEL" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="EH_ONCANCEL" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="EH_ONCANCEL" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONCANCEL.
* Added by wizard: Handler for event &apos;CANCEL&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="EH_ONSAVE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="EH_ONSAVE" SCONAME="HTMLB_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_HTMLB_EVENT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZL_ZCTI_COU_COURSEOV" CMPNAME="EH_ONSAVE" SCONAME="HTMLB_EVENT_EX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTMLB_DATA" PAROPTIONL="X"/>
   <source>method EH_ONSAVE.
* Added by wizard: Handler for event &apos;SAVE&apos;

endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_OVW_VIEWSET" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_COURSEOV_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_OVW_VIEWSET" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSEOV_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSEOV_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSEOV_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.


* create context nodes


endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CN00" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CN00" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONE0_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO0_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_COURSECUCO0">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO0_IMPL" REFCLSNAME="ZL_ZCTI_COU_COURSECUCO0" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO0" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO0" CMPNAME="CONTROLLER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CourseCuCo&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO0" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSECUCO0_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO0" REFCLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSECUCO0" REFCLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSECUCO0" REFCLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_COURSECUCO0" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).
    controller_id = controller.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_COURSECUCO0_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CUSTOM_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CN00" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CN00" CMPNAME="BASE_ENTITY_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CN00" REFCLSNAME="CL_BSP_WD_CONTEXT_NODE" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CTXT" CMPNAME="COURSE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSECUCO0_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.


* create context nodes


    CREATE_COURSE( ).



endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_COURSECUCO0_CTXT" CMPNAME="CREATE_COURSE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_COURSE.

    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,           &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.           &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_COURSECUCO0_CN00&apos;

        model_id       = &apos;COURSE&apos; ).                        &quot;#EC NOTEXT
    COURSE ?= model.
    CLEAR model.


endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0">
  <implementing CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="IF_BSP_WD_EVENT_HANDLER" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1"/>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" MTDNAME="DO_CLEANUP_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" MTDNAME="DO_VIEW_INIT_ON_ACTIVATION"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" MTDNAME="IF_BSP_WD_HISTORY_STATE_DESCR~GET_STATE_DESCRIPTION"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" MTDNAME="IP_NEW"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" MTDNAME="IP_SHOWDETAILS"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" MTDNAME="SET_VIEW_GROUP_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW0" VERSION="1" MTDNAME="WD_DESTROY"/>
  </inheritance>
  <interfaceMethod CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" CPDNAME="IF_BSP_WD_HISTORY_STATE_DESCR~GET_STATE_DESCRIPTION">
   <source>METHOD if_bsp_wd_history_state_descr~get_state_description.
  DATA: lr_entity TYPE REF TO cl_crm_bol_entity,
        ls_attrs TYPE zcti_st_course_attr.

  lr_entity ?= zcti_cl_ui_utils=&gt;get_controller_context_entity( ir_controller = me-&gt;comp_controller iv_context = &apos;COURSE&apos; ).

  CHECK lr_entity IS BOUND.
  lr_entity-&gt;get_properties( IMPORTING es_attributes = ls_attrs ).

  CONCATENATE &apos;Course: &apos; ls_attrs-name &apos;(&apos; ls_attrs-id &apos;)&apos; INTO description RESPECTING BLANKS.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" CPDNAME="IF_BSP_WD_EVENT_HANDLER~HANDLE_EVENT">
   <source>METHOD if_bsp_wd_event_handler~handle_event.
  CASE iv_event_name.
    WHEN if_bsp_wd_data_loss_handler=&gt;save_event.

    WHEN if_bsp_wd_data_loss_handler=&gt;revert_event.

    WHEN if_bsp_wd_data_loss_handler=&gt;cancel_event.

  ENDCASE.
ENDMETHOD.</source>
  </interfaceMethod>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="DO_CLEANUP_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD do_cleanup_context.
  SET HANDLER on_before_wa_content_change ACTIVATION abap_false.
  CALL METHOD super-&gt;do_cleanup_context.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="DO_VIEW_INIT_ON_ACTIVATION" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD do_view_init_on_activation.

  CALL METHOD super-&gt;do_view_init_on_activation.

  SET HANDLER on_before_wa_content_change ACTIVATION abap_true.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="IP_NEW" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD ip_new.
  DATA: lr_bo TYPE REF TO cl_crm_bol_entity,
      lr_comp TYPE REF TO zl_zcti_cou_bspwdcompone0_impl.

  lr_comp ?= me-&gt;comp_controller.

  IF iv_collection IS BOUND.
    TRY.
        &quot;get entity
        lr_bo ?= iv_collection-&gt;get_current( ).

        &quot;set to component context
        lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;clear( ).
        lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;add( lr_bo ).
      CATCH cx_root.
    ENDTRY.
  ENDIF.

  set_view_group_context( iv_parent_context = me-&gt;view_group_context
                          iv_first_time = abap_true ).
  me-&gt;view_group_context-&gt;set_all_editable( ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="IP_SHOWDETAILS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD ip_showdetails.

  DATA: lr_bo TYPE REF TO cl_crm_bol_entity,
    lr_comp TYPE REF TO zl_zcti_cou_bspwdcompone0_impl.

  lr_comp ?= me-&gt;comp_controller.

  IF iv_collection IS BOUND.
    TRY.
        &quot;get entity
        lr_bo ?= iv_collection-&gt;get_current( ).

        &quot;set to component context
        lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;clear( ).
        lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;add( lr_bo ).
      CATCH cx_root.
    ENDTRY.
  ENDIF.

*  set_view_group_context( iv_parent_context = me-&gt;view_group_context
*                          iv_first_time = abap_true ).
*  me-&gt;view_group_context-&gt;set_all_editable( ).
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" CMPNAME="ON_BEFORE_WA_CONTENT_CHANGE" VERSION="1" LANGU="E" DESCRIPT="for dataloss popup" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_BSP_WD_VIEW_MANAGER" REFCMPNAME="BEFORE_WORKAREA_CONTENT_CHANGE" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_MAINWINDOW0_IMPL" CMPNAME="ON_BEFORE_WA_CONTENT_CHANGE" SCONAME="DATA_LOSS_HANDLER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0"/>
   <source>METHOD on_before_wa_content_change.
  DATA: lr_entity TYPE REF TO cl_crm_bol_entity,
        lr_tx TYPE REF TO cl_crm_bol_custom_tx_ctxt,
        lv_save_needed TYPE abap_bool.

  lr_entity ?= zcti_cl_ui_utils=&gt;get_controller_context_entity( ir_controller = me-&gt;comp_controller iv_context = &apos;COURSE&apos; ).

  CHECK lr_entity IS BOUND.

  lr_tx ?= lr_entity-&gt;get_transaction( ).

  lv_save_needed = lr_tx-&gt;if_bol_transaction_context~check_save_needed( ).

  IF lv_save_needed EQ abap_true.
    data_loss_handler-&gt;set_save_handler( me ).
    data_loss_handler-&gt;set_revert_handler( me ).
    data_loss_handler-&gt;set_cancel_handler( me ).
    data_loss_handler-&gt;trigger_data_loss_handling( ).
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="SET_VIEW_GROUP_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD set_view_group_context.

  DATA: lr_comp TYPE REF TO zl_zcti_cou_bspwdcompone0_impl,
        lr_entity TYPE REF TO cl_crm_bol_entity,
        lr_tx TYPE REF TO if_bol_transaction_context.

  IF iv_first_time EQ abap_true AND view_group_context IS INITIAL.
    IF iv_parent_context IS INITIAL.
      CREATE OBJECT view_group_context
        TYPE
          cl_bsp_wd_view_group_context.
    ELSE.
      view_group_context ?= iv_parent_context.
    ENDIF.
  ENDIF.

  lr_comp ?= me-&gt;comp_controller.
  lr_entity ?= lr_comp-&gt;typed_context-&gt;course-&gt;collection_wrapper-&gt;get_current( ).
  CHECK lr_entity IS BOUND.

  lr_tx = lr_entity-&gt;get_transaction( ).
  me-&gt;view_group_context-&gt;set_associated_tx_context( lr_tx ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW0" CMPNAME="WD_DESTROY" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD wd_destroy.
  DATA: lr_cn TYPE REF TO cl_bsp_wd_context_node,
      lr_entity TYPE REF TO cl_crm_bol_entity,
      ls_attrs TYPE zcti_st_course_attr.

  lr_cn = zcti_cl_ui_utils=&gt;get_controller_context( ir_controller = me-&gt;comp_controller iv_context = &apos;COURSE&apos; ).
  lr_entity ?= lr_cn-&gt;collection_wrapper-&gt;get_current( ).


  TRY.
      CHECK lr_entity IS BOUND AND lr_entity-&gt;is_persistent( ) EQ abap_true.
      RAISE EVENT history_trigger.
    CATCH cx_root.
  ENDTRY.
  CALL METHOD super-&gt;wd_destroy.
ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" VERSION="1" LANGU="E" DESCRIPT="CTI GENIL Object Handler Factory" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature
TYPES: BEGIN OF lty_obj_handler,
         object_name TYPE crmt_ext_obj_name,
         handler     TYPE REF TO object,
       END OF lty_obj_handler.
TYPES: lty_obj_handler_tt TYPE SORTED TABLE OF lty_obj_handler WITH
      UNIQUE KEY object_name. &quot; OBJECT_ID.</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="GT_GENIL_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="CTI GenIL Objects Table Type" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCTI_TT_ALLOB_IL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="GT_OBJ_HANDLERS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LTY_OBJ_HANDLER_TT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.
*implement in child, if required
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CREATE_OBJ_HANDLER" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CREATE_OBJ_HANDLER" SCONAME="IV_OBJECT_NAME" VERSION="1" LANGU="E" DESCRIPT="External Name of Object" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME"/>
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CREATE_OBJ_HANDLER" SCONAME="RV_HANDLER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="OBJECT"/>
   <source>METHOD create_obj_handler.
  DATA: ls_genil_object LIKE LINE OF gt_genil_objects,
      ls_handler LIKE LINE OF gt_obj_handlers.

*check handler buffer
  READ TABLE gt_genil_objects INTO ls_genil_object WITH KEY object_name = iv_object_name.
  IF sy-subrc IS NOT INITIAL.
    &quot;not found in buffer, read from DB
    SELECT SINGLE * FROM zcti_db_allob_il INTO ls_genil_object.
    IF sy-subrc IS INITIAL.
      &quot;found in DB, save to buffer
      APPEND ls_genil_object TO gt_genil_objects.
    ENDIF.
  ENDIF.

  CHECK ls_genil_object-object_hdlr IS NOT INITIAL. &quot;handler not specified, exit

* get handler instance from factory method
  TRY.
      CREATE OBJECT ls_handler-handler
        TYPE
          (ls_genil_object-object_hdlr)
        EXPORTING
          iv_handler_factory            = me.
    CATCH: cx_sy_dyn_call_illegal_type.
  ENDTRY.

  INSERT ls_handler INTO TABLE gt_obj_handlers.
  rv_handler = ls_handler-handler.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CREATE_OBJ_STRUCTURES" VERSION="1" LANGU="E" DESCRIPT="Create GenIL Config Structures" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CREATE_OBJ_STRUCTURES" SCONAME="IV_OBJECT_NAME" VERSION="1" LANGU="E" DESCRIPT="External Name of Object" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME"/>
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CREATE_OBJ_STRUCTURES" SCONAME="ES_ATTR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="3" TYPE="DATA"/>
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CREATE_OBJ_STRUCTURES" SCONAME="ES_KEY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="3" TYPE="DATA"/>
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="CREATE_OBJ_STRUCTURES" SCONAME="ES_CREATE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="3" TYPE="DATA"/>
   <source>METHOD create_obj_structures.
  DATA: ls_config LIKE LINE OF gt_genil_objects,
        lr_data type ref to data.

  &quot;read genil config
  ls_config = me-&gt;get_obj_config( iv_object_name ).

  IF ls_config-attr_struct IS NOT INITIAL AND es_attr IS REQUESTED.
    CREATE DATA es_attr TYPE (ls_config-attr_struct).
  ENDIF.

  IF ls_config-key_struct IS NOT INITIAL AND es_key IS REQUESTED.
    CREATE DATA es_key TYPE (ls_config-key_struct).
  ENDIF.

  IF ls_config-create_struct IS NOT INITIAL AND es_create IS REQUESTED.
    CREATE DATA es_create TYPE (ls_config-create_struct).
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="GET_OBJ_CONFIG" VERSION="1" LANGU="E" DESCRIPT="fetch GenIL Object Config Entry" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="GET_OBJ_CONFIG" SCONAME="IV_OBJECT_NAME" VERSION="1" LANGU="E" DESCRIPT="External Name of Object" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME"/>
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="GET_OBJ_CONFIG" SCONAME="RS_CONFIG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCTI_DB_ALLOB_IL"/>
   <source>METHOD get_obj_config.
  READ TABLE gt_genil_objects INTO rs_config WITH KEY object_name = iv_object_name.
  IF sy-subrc IS NOT INITIAL.
    SELECT SINGLE * FROM zcti_db_allob_il INTO rs_config WHERE object_name = iv_object_name.
    IF sy-subrc IS INITIAL.
      APPEND rs_config TO gt_genil_objects.
    ENDIF.
  ENDIF.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="GET_OBJ_HANDLER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="GET_OBJ_HANDLER" SCONAME="IV_OBJECT_NAME" VERSION="1" LANGU="E" DESCRIPT="External Name of Object" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME"/>
   <parameter CLSNAME="ZCTI_CL_GENIL_HDLR_FACTORY" CMPNAME="GET_OBJ_HANDLER" SCONAME="RV_HANDLER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="OBJECT"/>
   <source>METHOD get_obj_handler.
  DATA: ls_handler LIKE LINE OF gt_obj_handlers.

  READ TABLE gt_obj_handlers INTO ls_handler WITH TABLE KEY object_name = iv_object_name.
  IF sy-subrc IS NOT INITIAL.
    rv_handler = me-&gt;create_obj_handler( iv_object_name ).
  ELSE.
    rv_handler = ls_handler-handler.
  ENDIF.
ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCTI_CL_UTILS" VERSION="1" LANGU="E" DESCRIPT="CTI Utility Class" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCTI_CL_UTILS" CMPNAME="C_COURSE_ID_NR" VERSION="1" LANGU="E" DESCRIPT="CTI Course ID NR Key" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;01&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="NRNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCTI_CL_UTILS" CMPNAME="C_ID_NR" VERSION="1" LANGU="E" DESCRIPT="CTI ID Number Range Object" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;ZCTI_ID&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="NROBJ" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCTI_CL_UTILS" CMPNAME="C_OBJIL_COURSE" VERSION="1" LANGU="E" DESCRIPT="Course Object ID" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourse&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCTI_CL_UTILS" CMPNAME="C_OBJIL_COURSE_SEARCH" VERSION="1" LANGU="E" DESCRIPT="Course Search Obj ID" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="2" ATTVALUE="&apos;CTICourseSearch&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCTI_CL_UTILS" CMPNAME="C_USER_ID_NR" VERSION="1" LANGU="E" DESCRIPT="CTI User ID NR Key" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="&apos;02&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="NRNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCTI_CL_UTILS" CMPNAME="GENERATE_ID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_UTILS" CMPNAME="GENERATE_ID" SCONAME="IV_FOR" VERSION="1" LANGU="E" DESCRIPT="Number range number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="NRNR" PARVALUE="C_COURSE_ID_NR"/>
   <parameter CLSNAME="ZCTI_CL_UTILS" CMPNAME="GENERATE_ID" SCONAME="RV_NUMBER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="I"/>
   <source>METHOD generate_id.

  CALL FUNCTION &apos;NUMBER_GET_NEXT&apos;
    EXPORTING
      nr_range_nr                   = iv_for
      object                        = c_id_nr
*     QUANTITY                      = &apos;1&apos;
*     SUBOBJECT                     = &apos; &apos;
*     TOYEAR                        = &apos;0000&apos;
*     IGNORE_BUFFER                 = &apos; &apos;
   IMPORTING
     number                        = rv_number
*     QUANTITY                      =
*     RETURNCODE                    =
   EXCEPTIONS
     interval_not_found            = 1
     number_range_not_intern       = 2
     object_not_found              = 3
     quantity_is_0                 = 4
     quantity_is_not_1             = 5
     interval_overflow             = 6
     buffer_overflow               = 7
     OTHERS                        = 8
            .
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCTI_CL_GIL_ABSTR" VERSION="1" LANGU="E" DESCRIPT="GenIL Object Impl. Abstract" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <implementing CLSNAME="ZCTI_CL_GIL_ABSTR" REFCLSNAME="ZCTI_IF_GIL_ABSTR" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1"/>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCTI_CL_GIL_ABSTR" CMPNAME="HANDLER_FACTORY" VERSION="1" LANGU="E" DESCRIPT="CTI GENIL Object Handler Factory" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCTI_CL_GENIL_HDLR_FACTORY" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCTI_CL_GIL_ABSTR" CMPNAME="OBJECT_NAME" VERSION="1" LANGU="E" DESCRIPT="External Name of Object" EXPOSURE="1" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CRMT_EXT_OBJ_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR" CPDNAME="ZCTI_IF_GIL_ABSTR~MODIFY">
   <source>method ZCTI_IF_GIL_ABSTR~MODIFY.
endmethod.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR" CPDNAME="ZCTI_IF_GIL_ABSTR~MODIFY_CHILDREN">
   <source>method ZCTI_IF_GIL_ABSTR~MODIFY_CHILDREN.
endmethod.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR" CPDNAME="ZCTI_IF_GIL_ABSTR~PROCESS_CHILDREN">
   <source>method ZCTI_IF_GIL_ABSTR~PROCESS_CHILDREN.
endmethod.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR" CPDNAME="ZCTI_IF_GIL_ABSTR~READ">
   <source>method ZCTI_IF_GIL_ABSTR~READ.
endmethod.</source>
  </interfaceMethod>
  <method CLSNAME="ZCTI_CL_GIL_ABSTR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_GIL_ABSTR" CMPNAME="CONSTRUCTOR" SCONAME="IV_HANDLER_FACTORY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCTI_CL_GENIL_HDLR_FACTORY"/>
   <source>METHOD constructor.

  DATA: type_ref TYPE REF TO cl_abap_typedescr.
  DATA: lv_cl_name TYPE abap_abstypename.

  me-&gt;handler_factory = iv_handler_factory.

  IF me-&gt;object_name IS INITIAL. &quot;fetch OBJECT NAME
    CALL METHOD cl_abap_classdescr=&gt;describe_by_object_ref
      EXPORTING
        p_object_ref = me
      RECEIVING
        p_descr_ref  = type_ref.

    lv_cl_name = type_ref-&gt;absolute_name.

    SHIFT lv_cl_name BY 7 PLACES IN CHARACTER MODE.

    &quot;fetch from table
    SELECT SINGLE object_name FROM zcti_db_allob_il
      INTO me-&gt;object_name
      WHERE object_hdlr EQ lv_cl_name.
  ENDIF.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_GIL_ABSTR" CMPNAME="SET_ATTR_PROPERTIES" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_GIL_ABSTR" CMPNAME="SET_ATTR_PROPERTIES" SCONAME="IV_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Data Container - Object Interface" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_GENIL_CONTAINER_OBJECT"/>
   <source>METHOD set_attr_properties.
  DATA: lv_attr_props TYPE REF TO if_genil_obj_attr_properties.

* first get the property object
  lv_attr_props = iv_object-&gt;get_attr_props_obj( ).
* set property &apos;changeable&apos; for all attributes
  lv_attr_props-&gt;set_all_properties(
         if_genil_obj_attr_properties=&gt;changeable ).
* set the property for attribute GUID to technical
* here we use the attribute name for the assignment
  lv_attr_props-&gt;set_property_by_name(
                 iv_name  = &apos;GUID&apos;
                 iv_value = if_genil_obj_attr_properties=&gt;technical ).
* set the property for attribute NUMBER to read-only, since it is a key field
* here we use the attribute index for the assignment -&gt; this is fast
* then the name!
  lv_attr_props-&gt;set_property_by_idx(
                 iv_index  = 1
                 iv_value = if_genil_obj_attr_properties=&gt;read_only ).
* set the property for attribute FUNCTION to read-only, since it is a key field
  lv_attr_props-&gt;set_property_by_idx(
                 iv_index  = 2
                 iv_value = if_genil_obj_attr_properties=&gt;read_only ).

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" LANGU="E" DESCRIPT="GenIL Root Object Impl. Abstract" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZCTI_CL_GIL_ABSTR">
  <implementing CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" REFCLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1"/>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" REFCLSNAME="ZCTI_CL_GIL_ABSTR" VERSION="1" STATE="1"/>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~CREATE">
   <source>method ZCTI_IF_GIL_ABSTR_ROOT~CREATE.
endmethod.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~DELETE">
   <source>method ZCTI_IF_GIL_ABSTR_ROOT~DELETE.
endmethod.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~LOCK">
   <source>method ZCTI_IF_GIL_ABSTR_ROOT~LOCK.
endmethod.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~SAVE">
   <source>method ZCTI_IF_GIL_ABSTR_ROOT~SAVE.
endmethod.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~SEARCH">
   <source>method ZCTI_IF_GIL_ABSTR_ROOT~SEARCH.
endmethod.</source>
  </interfaceMethod>
  <method CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" CMPNAME="CONSTRUCTOR" SCONAME="IV_HANDLER_FACTORY" VERSION="1" LANGU="E" DESCRIPT="CTI GENIL Object Handler Factory" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCTI_CL_GENIL_HDLR_FACTORY"/>
   <source>method CONSTRUCTOR.
super-&gt;constructor( iv_handler_factory = iv_handler_factory ).
endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCTI_CL_COURSE_API" VERSION="1" LANGU="E" DESCRIPT="CTI Course API class" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCTI_CL_COURSE_API" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="GT_COURSES" VERSION="1" LANGU="E" DESCRIPT="Course Attribute Table Type" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCTI_TT_COURSE_ATTR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="CREATE" VERSION="1" LANGU="E" DESCRIPT="Create Course into Buffer" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="CREATE" SCONAME="CS_KEY" VERSION="1" LANGU="E" DESCRIPT="Course Key Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_KEY"/>
   <source>METHOD create.

  DATA: ls_attr LIKE LINE OF gt_courses.

* create guid, if not provided
  IF cs_key-guid IS INITIAL.
    CALL FUNCTION &apos;GUID_CREATE&apos;
      IMPORTING
        ev_guid_16 = cs_key-guid.
  ENDIF.

* create unique id
  cs_key-id = zcti_cl_utils=&gt;generate_id( zcti_cl_utils=&gt;c_course_id_nr ).

* add new entry into buffer
  MOVE-CORRESPONDING cs_key TO ls_attr.
  APPEND ls_attr TO gt_courses.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="DELETE" VERSION="1" LANGU="E" DESCRIPT="Delete Course using Key" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="DELETE" SCONAME="IS_KEY" VERSION="1" LANGU="E" DESCRIPT="Course Key Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_KEY"/>
   <exception CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="DELETE" SCONAME="DELETE_FAILED" VERSION="1" LANGU="E" DESCRIPT="Deletion of Course Failed" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD delete.

*delete from buffer
  DELETE TABLE gt_courses WITH TABLE KEY guid = is_key-guid.

  DELETE FROM zcti_db_course WHERE guid EQ is_key-guid.
  IF sy-subrc IS NOT INITIAL.
    RAISE delete_failed.
  ENDIF.

* Notify Enterprise Search about operations on root object or its children
  DATA: change_pointer TYPE crms_es_change_pointer.
  change_pointer-bol_root_obj_name = zcti_cl_utils=&gt;c_objil_course.
  change_pointer-bol_root_obj_key = is_key-guid.
  change_pointer-operation = cl_crm_es_mgr=&gt;gc_cp_root_deleted.
  TRY.
      cl_crm_es_mgr=&gt;notify_changes( is_crm_change_pointer = change_pointer ).
    CATCH cx_crm_es_fault.
  ENDTRY.

* delete from dependent tables
  &quot;delete from zcti_db_course_rel where cid eq is_key-guid.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="INIT" VERSION="1" LANGU="E" DESCRIPT="clear buffer for Course" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="INIT" SCONAME="IS_KEY" VERSION="1" LANGU="E" DESCRIPT="Course Key Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_KEY"/>
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="INIT" SCONAME="RV_SUCCESS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD init.
  FIELD-SYMBOLS: &lt;fs_item&gt; TYPE zcti_st_course_attr.
  rv_success = abap_false.
*delete from buffer
  DELETE TABLE gt_courses WITH TABLE KEY guid = is_key-guid.
  IF sy-subrc IS INITIAL.
    rv_success = abap_true.
  ENDIF.
*delete from item buffers

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="LOCK" VERSION="1" LANGU="E" DESCRIPT="Lock Course using Key" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="LOCK" SCONAME="IS_KEY" VERSION="1" LANGU="E" DESCRIPT="Course Key Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_KEY"/>
   <exception CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="LOCK" SCONAME="LOCK_FAILED" VERSION="1" LANGU="E" DESCRIPT="Locking failed on Course" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD lock.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="READ" VERSION="1" LANGU="E" DESCRIPT="Read Course using Key" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="READ" SCONAME="IS_KEY" VERSION="1" LANGU="E" DESCRIPT="Course Key Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_KEY"/>
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="READ" SCONAME="ES_ATTRIBUTES" VERSION="1" LANGU="E" DESCRIPT="Course Attributes Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_ATTR"/>
   <exception CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="READ" SCONAME="NO_ENTRY" VERSION="1" LANGU="E" DESCRIPT="No Entry Found" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD read.

*read from buffer first
  READ TABLE gt_courses WITH KEY guid = is_key-guid INTO es_attributes.
  IF sy-subrc IS NOT INITIAL. &quot;not found in buffer
    &quot;read from DB
    SELECT SINGLE * FROM zcti_db_course
      INTO CORRESPONDING FIELDS OF es_attributes WHERE guid EQ is_key-guid.
    IF sy-subrc IS NOT INITIAL.
      &quot;not found in DB either, error
      RAISE no_entry.
    ELSE.
      &quot;add newly found entry into buffer
      APPEND es_attributes TO gt_courses.
    ENDIF.
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="SAVE" VERSION="1" LANGU="E" DESCRIPT="Save Course using Key" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="SAVE" SCONAME="IS_KEY" VERSION="1" LANGU="E" DESCRIPT="Course Key Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_KEY"/>
   <exception CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="SAVE" SCONAME="SAVE_FAILED" VERSION="1" LANGU="E" DESCRIPT="Course Save Failed" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD save.
  DATA: ls_attr TYPE zcti_st_course_attr,
        ls_db TYPE zcti_db_course.

* get buffer entry
  READ TABLE gt_courses WITH KEY guid = is_key-guid INTO ls_attr.
  IF sy-subrc IS INITIAL.
    &quot;found entry, save to DB
    MOVE-CORRESPONDING ls_attr TO ls_db.
    MODIFY zcti_db_course FROM ls_db.
    IF sy-subrc IS NOT INITIAL.
      RAISE save_failed.
    ENDIF.
  ELSE.
    &quot;not found in buffer, just read from db
    SELECT SINGLE * FROM zcti_db_course
      INTO CORRESPONDING FIELDS OF ls_attr
      WHERE guid EQ is_key-guid.
    IF sy-subrc IS INITIAL.
      APPEND ls_attr TO gt_courses.
    ELSE.
      &quot;no entry in DB either, error
      RAISE save_failed.
    ENDIF.
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="SEARCH" VERSION="1" LANGU="E" DESCRIPT="Simple Search of Course" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="SEARCH" SCONAME="IS_PARAMETERS" VERSION="1" LANGU="E" DESCRIPT="Course Search Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_SEARCH"/>
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="SEARCH" SCONAME="ET_KEYS" VERSION="1" LANGU="E" DESCRIPT="Course Key Table Type" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_TT_COURSE_KEY"/>
   <source>METHOD search.

  DATA: lv_where TYPE string,
        lv_and_required TYPE abap_bool VALUE abap_false.

  CLEAR et_keys.

*  CHECK is_parameters IS NOT INITIAL.

* prepare where condition
  IF is_parameters-id IS NOT INITIAL .
    CONCATENATE lv_where &apos; id eq `&apos; is_parameters-id &apos;` &apos; INTO lv_where RESPECTING BLANKS.
    lv_and_required = abap_true.
  ENDIF.

  IF is_parameters-name IS NOT INITIAL.
    IF lv_and_required EQ abap_true.
      CONCATENATE lv_where &apos; and &apos; INTO lv_where RESPECTING BLANKS.
    ENDIF.
    CONCATENATE lv_where &apos; name eq `&apos; is_parameters-name &apos;` &apos; INTO lv_where RESPECTING BLANKS.
  ENDIF.

* make a select based on where condition
  IF lv_where IS INITIAL.
    SELECT guid id FROM zcti_db_course INTO CORRESPONDING FIELDS OF TABLE et_keys.
  ELSE.
    CONCATENATE &apos;( &apos; lv_where &apos; )&apos; INTO lv_where RESPECTING BLANKS.
    SELECT guid id FROM zcti_db_course INTO CORRESPONDING FIELDS OF TABLE et_keys WHERE (lv_where).
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="WRITE" VERSION="1" LANGU="E" DESCRIPT="Update Modified Attributes to Buffer" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="WRITE" SCONAME="IS_KEY" VERSION="1" LANGU="E" DESCRIPT="Course Key Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_KEY"/>
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="WRITE" SCONAME="IS_ATTRIBUTES" VERSION="1" LANGU="E" DESCRIPT="Course Attributes Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCTI_ST_COURSE_ATTR"/>
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="WRITE" SCONAME="IT_CHANGED_FIELDS" VERSION="1" LANGU="E" DESCRIPT="Table of Attribute Names" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_ATTR_NAME_TAB"/>
   <parameter CLSNAME="ZCTI_CL_COURSE_API" CMPNAME="WRITE" SCONAME="ET_RETURN" VERSION="1" LANGU="E" DESCRIPT="Return parameter table" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIRET2_T"/>
   <source>METHOD write.

  FIELD-SYMBOLS: &lt;line&gt; TYPE zcti_st_course_attr,
               &lt;old&gt;  TYPE simple,
               &lt;new&gt;  TYPE simple,
               &lt;name&gt; TYPE name_komp.

  READ TABLE gt_courses WITH KEY guid = is_key-guid ASSIGNING &lt;line&gt;.
  IF sy-subrc = 0.
    &quot;found object in buffer, copy changed attributes to structure
    LOOP AT it_changed_fields ASSIGNING &lt;name&gt;.
      ASSIGN COMPONENT &lt;name&gt; OF STRUCTURE &lt;line&gt; TO &lt;old&gt;.
      CHECK sy-subrc = 0.
      ASSIGN COMPONENT &lt;name&gt; OF STRUCTURE is_attributes TO &lt;new&gt;.
      CHECK sy-subrc = 0.
      &lt;old&gt; = &lt;new&gt;.
    ENDLOOP.
  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCTI_CL_MODEL_IL" VERSION="1" LANGU="E" DESCRIPT="CTI GenIL Model Implementation" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCTI_CL_MODEL_IL" CMPNAME="HANDLER_FACTORY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCTI_CL_GENIL_HDLR_FACTORY" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_INTLAY~CREATE_OBJECTS"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_INTLAY~DELETE_OBJECTS"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_INTLAY~GET_OBJECTS"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_INTLAY~GET_QUERY_RESULT"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_INTLAY~INIT_OBJECTS"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_INTLAY~LOCK_OBJECTS"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_INTLAY~MODIFY_OBJECTS"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_INTLAY~SAVE_OBJECTS"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_MODEL~GET_MODEL"/>
   <redefinition CLSNAME="ZCTI_CL_MODEL_IL" REFCLSNAME="CL_CRM_GENIL_ABSTR_COMPONENT" VERSION="1" MTDNAME="IF_GENIL_APPL_MODEL~GET_OBJECT_PROPS"/>
  </inheritance>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_INTLAY~CREATE_OBJECTS">
   <source>METHOD if_genil_appl_intlay~create_objects.

  DATA: lt_request_obj TYPE crmt_request_obj_tab.
  DATA: lv_cl_object TYPE REF TO object.
  DATA: root_object TYPE REF TO zcti_if_gil_abstr_root.

  DATA: lr_params TYPE REF TO data.
  FIELD-SYMBOLS: &lt;fs_params&gt; TYPE ANY.

* Here we create root objects. Since we have only one root object
* in our example we would not have to branch.
* However this should be a generic example!

  TRY.
* create Attribute Structure of Object
      me-&gt;handler_factory-&gt;create_obj_structures(
          EXPORTING iv_object_name = iv_object_name
          IMPORTING
            es_key = lr_params ).
      ASSIGN lr_params-&gt;* TO &lt;fs_params&gt;.

* fill parameter structure from name value pair table
      CALL METHOD fill_struct_from_nvp_tab
        EXPORTING
          it_parameters = it_parameters
        CHANGING
          cs_parameter  = &lt;fs_params&gt;.

* get object handler
      lv_cl_object =
         me-&gt;handler_factory-&gt;get_obj_handler(
                                  iv_object_name = iv_object_name ).
* start create method
      TRY.
          root_object ?= lv_cl_object.
        CATCH:cx_sy_move_cast_error.
          EXIT.
      ENDTRY.
      CALL METHOD root_object-&gt;create
        EXPORTING
          iv_number     = iv_number
          is_parameters = &lt;fs_params&gt;
          iv_root_list  = iv_root_list.

    CATCH: cx_crm_genil_general_error.
  ENDTRY.

* read the attributes
  me-&gt;if_genil_appl_intlay~get_objects( it_request_objects = lt_request_obj
                                        iv_root_list       = iv_root_list ).

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_INTLAY~DELETE_OBJECTS">
   <source>METHOD if_genil_appl_intlay~delete_objects.

  FIELD-SYMBOLS: &lt;obj&gt; TYPE crmt_obj_line.

  DATA: lv_cl_object TYPE REF TO object.
  DATA: root_object TYPE REF TO zcti_if_gil_abstr_root.

  LOOP AT ct_object_list ASSIGNING &lt;obj&gt;.
    TRY.
* get object handler
        lv_cl_object =
           me-&gt;handler_factory-&gt;get_obj_handler(
                                    iv_object_name = &lt;obj&gt;-object_name ).
* start delete method
        TRY.
            root_object ?= lv_cl_object.
          CATCH:cx_sy_move_cast_error.
            EXIT.
        ENDTRY.

        &lt;obj&gt;-success = root_object-&gt;delete( &lt;obj&gt;-object_id ).
      CATCH: cx_crm_genil_general_error.
    ENDTRY.
  ENDLOOP.
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_INTLAY~GET_OBJECTS">
   <source>METHOD if_genil_appl_intlay~get_objects .

  DATA: lv_object TYPE REF TO if_genil_container_object,
        lv_name   TYPE crmt_ext_obj_name.
  DATA: lv_cl_object TYPE REF TO object.
  DATA: nonroot_object TYPE REF TO zcti_if_gil_abstr.

* all entries in the root list have the same type/name -&gt; take first
  lv_object = iv_root_list-&gt;get_first( ).

* make sure we got an entry.
  CHECK lv_object IS BOUND.

* Note: the object from the root list must be either a root or
* access object. Dependent objects will never be part of
* the root list.
  lv_name = lv_object-&gt;get_name( ).
  TRY.
* get object handler
      lv_cl_object =
         me-&gt;handler_factory-&gt;get_obj_handler(
                              iv_object_name = lv_name ).
* start read method
      TRY.
          nonroot_object ?= lv_cl_object.
        CATCH:cx_sy_move_cast_error.
          EXIT.
      ENDTRY.
      CALL METHOD nonroot_object-&gt;read
        EXPORTING
          it_request_objects = it_request_objects
          iv_ref             = iv_root_list.

    CATCH: cx_crm_genil_general_error.
  ENDTRY.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_INTLAY~GET_QUERY_RESULT">
   <source>METHOD if_genil_appl_intlay~get_query_result .

  DATA: lt_request_obj TYPE crmt_request_obj_tab,
        lv_name TYPE crmt_ext_obj_name,
        lr_root_object TYPE REF TO zcti_if_gil_abstr_root,
        lr_params TYPE REF TO data.

  FIELD-SYMBOLS: &lt;fs_params&gt; TYPE ANY.

* create Attribute Structure of SearchObject
  me-&gt;handler_factory-&gt;create_obj_structures(
      EXPORTING iv_object_name = iv_query_name
      IMPORTING es_attr = lr_params ).
  ASSIGN lr_params-&gt;* TO &lt;fs_params&gt;.

* fill parameters into search structure
  CALL METHOD fill_struct_from_nvp_tab
    EXPORTING
      it_parameters = it_parameters
    CHANGING
      cs_parameter  = &lt;fs_params&gt;.

* select the rigth query
  CASE iv_query_name.
    WHEN zcti_cl_utils=&gt;c_objil_course_search.

      TRY.
* start search method
          TRY.
* get object handler
              lr_root_object ?= me-&gt;handler_factory-&gt;get_obj_handler( zcti_cl_utils=&gt;c_objil_course ).
            CATCH:cx_sy_move_cast_error.
              EXIT.
          ENDTRY.
          CALL METHOD lr_root_object-&gt;search
            EXPORTING
              is_parameters     = &lt;fs_params&gt;
              is_request_object = is_request_object
              iv_root_list      = iv_root_list.

        CATCH: cx_crm_genil_general_error.
      ENDTRY.

* Note: The request object restricts the attributes to read.
* If their is no request object entry or the attributes table is empty
* all attributes are requested!

*     read the attributes and relation using the GET_OBJECTS method
      APPEND is_request_object TO lt_request_obj.

      me-&gt;if_genil_appl_intlay~get_objects( it_request_objects = lt_request_obj
                                            iv_root_list       = iv_root_list ).
    WHEN OTHERS.
      RETURN.
  ENDCASE.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_INTLAY~INIT_OBJECTS">
   <source>METHOD if_genil_appl_intlay~init_objects.
* in the init method we set all API buffers back to the database state
* all unsaved changes will be rejected.

  FIELD-SYMBOLS: &lt;line&gt; TYPE crmt_obj_line.
  DATA: ls_course TYPE zcti_st_course_key.

  LOOP AT ct_object_list ASSIGNING &lt;line&gt;.
    CASE &lt;line&gt;-object_name.
      WHEN zcti_cl_utils=&gt;c_objil_course.
        ls_course-guid = &lt;line&gt;-object_id.
        &lt;line&gt;-success = zcti_cl_course_api=&gt;init( ls_course ).
    ENDCASE.
  ENDLOOP.


ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_INTLAY~LOCK_OBJECTS">
   <source>METHOD if_genil_appl_intlay~lock_objects .

  FIELD-SYMBOLS: &lt;obj&gt; TYPE crmt_obj_line.
  DATA: lv_cl_object TYPE REF TO object.
  DATA: root_object TYPE REF TO zcti_if_gil_abstr_root.

  LOOP AT ct_object_list ASSIGNING &lt;obj&gt;.
    TRY.
* get object handler
        lv_cl_object =
           me-&gt;handler_factory-&gt;get_obj_handler(
                                iv_object_name = &lt;obj&gt;-object_name ).
* start lock method
        TRY.
            root_object ?= lv_cl_object.
          CATCH:cx_sy_move_cast_error.
            EXIT.
        ENDTRY.
        CALL METHOD root_object-&gt;lock
          EXPORTING
            iv_guid    = &lt;obj&gt;-object_id
          RECEIVING
            rv_success = &lt;obj&gt;-success.

      CATCH: cx_crm_genil_general_error.
    ENDTRY.
  ENDLOOP.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_INTLAY~MODIFY_OBJECTS">
   <source>METHOD if_genil_appl_intlay~modify_objects.

  DATA: lv_object TYPE REF TO if_genil_container_object,
        lv_name   TYPE crmt_ext_obj_name.

  DATA: lv_cl_object TYPE REF TO object.
  DATA: nonroot_object TYPE REF TO zcti_if_gil_abstr.

  CLEAR et_changed_objects.

* all entries in the root list have the same type/name -&gt; take first
  lv_object = iv_root_list-&gt;get_first( ).

* make sure we got an entry.
  CHECK lv_object IS BOUND.

* Note: In the MODIFY method only root objects can be part of the
* container root list.
  lv_name = lv_object-&gt;get_name( ).
  TRY.
* get object handler
      lv_cl_object =
         me-&gt;handler_factory-&gt;get_obj_handler(
                                  iv_object_name = lv_name ).
* start modify method
      TRY.
          nonroot_object ?= lv_cl_object.
        CATCH:cx_sy_move_cast_error.
          EXIT.
      ENDTRY.
      CALL METHOD nonroot_object-&gt;modify
        EXPORTING
          iv_ref             = iv_root_list
        CHANGING
          ct_changed_objects = et_changed_objects.

    CATCH: cx_crm_genil_general_error.
  ENDTRY.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_INTLAY~SAVE_OBJECTS">
   <source>METHOD if_genil_appl_intlay~save_objects .

  FIELD-SYMBOLS: &lt;obj&gt; TYPE crmt_obj_line.
  DATA: object_id TYPE crmt_genil_object_id.
  DATA: lv_cl_object TYPE REF TO object.
  DATA: root_object TYPE REF TO zcti_if_gil_abstr_root.

  LOOP AT ct_object_list ASSIGNING &lt;obj&gt;.
    TRY.
* get object handler
        lv_cl_object =
           me-&gt;handler_factory-&gt;get_obj_handler(
                                   iv_object_name = &lt;obj&gt;-object_name ).
* start save method
        TRY.
            root_object ?= lv_cl_object.
          CATCH:cx_sy_move_cast_error.
            EXIT.
        ENDTRY.
        CALL METHOD root_object-&gt;save
          EXPORTING
            iv_guid    = &lt;obj&gt;-object_id
          RECEIVING
            rv_success = &lt;obj&gt;-success.

      CATCH: cx_crm_genil_general_error.
    ENDTRY.
  ENDLOOP.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_MODEL~GET_MODEL">
   <source>METHOD if_genil_appl_model~get_model.

  CLEAR rt_relation_det.

  SELECT * FROM zcti_db_model_il
         INTO CORRESPONDING FIELDS OF TABLE rt_relation_det.
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_MODEL_IL" CPDNAME="IF_GENIL_APPL_MODEL~GET_OBJECT_PROPS">
   <source>METHOD if_genil_appl_model~get_object_props.

  SELECT * FROM zcti_db_allob_il INTO CORRESPONDING FIELDS OF TABLE rt_obj_props.

ENDMETHOD.</source>
  </interfaceMethod>
  <method CLSNAME="ZCTI_CL_MODEL_IL" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_MODEL_IL" CMPNAME="CONSTRUCTOR" SCONAME="IV_MODE" VERSION="1" LANGU="E" DESCRIPT="Single-Character Flag" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR1"/>
   <source>METHOD constructor .

  super-&gt;constructor( iv_mode ).

  IF iv_mode = runtime_mode.
*   create in run time mode

*   instanciate BO_handler factory
    CREATE OBJECT me-&gt;handler_factory.

  ELSEIF iv_mode = designtime_mode.
*   create in design time mode

  ELSE.
    RAISE EXCEPTION TYPE cx_crm_cic_parameter_error
      EXPORTING
        class = &apos;ZCTI_CL_MODEL_IL&apos;
        meth  = &apos;CONSTRUCTOR&apos;
        param = &apos;IV_MODE&apos;.
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCTI_CL_MODEL_IL" CMPNAME="SET_ATTR_PROPERTIES" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_CL_MODEL_IL" CMPNAME="SET_ATTR_PROPERTIES" SCONAME="IR_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Data Container - Object Interface" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_GENIL_CONTAINER_OBJECT"/>
   <source>METHOD set_attr_properties.
  DATA: lr_attr_props TYPE REF TO if_genil_obj_attr_properties.

* first get the property object
  lr_attr_props = ir_object-&gt;get_attr_props_obj( ).
* set property &apos;changeable&apos; for all attributes
  lr_attr_props-&gt;set_all_properties( if_genil_obj_attr_properties=&gt;changeable ).
* set the property for attribute GUID to read-only
* here we use the attribute name for the assignment
  lr_attr_props-&gt;set_property_by_name( iv_name  = &apos;GUID&apos;
                                       iv_value = if_genil_obj_attr_properties=&gt;read_only ).
* set the property for attribute NUMBER to technical
* here we use the attribute index for the assignment -&gt; this is fast then the name!
  lr_attr_props-&gt;set_property_by_idx( iv_index  = 2
                                      iv_value = if_genil_obj_attr_properties=&gt;technical ).
ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCTI_CL_COURSE" VERSION="1" LANGU="E" DESCRIPT="CTI Course API Class" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCTI_CL_COURSE" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCTI_CL_COURSE" CMPNAME="GT_ATTR_BUFFER" VERSION="1" LANGU="E" DESCRIPT="Course Attribute Table Type" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCTI_TT_COURSE_ATTR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCTI_CL_COURSE" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZCTI_CL_COURSE" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" MTDNAME="ZCTI_IF_GIL_ABSTR_ROOT~CREATE"/>
   <redefinition CLSNAME="ZCTI_CL_COURSE" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" MTDNAME="ZCTI_IF_GIL_ABSTR_ROOT~DELETE"/>
   <redefinition CLSNAME="ZCTI_CL_COURSE" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" MTDNAME="ZCTI_IF_GIL_ABSTR_ROOT~LOCK"/>
   <redefinition CLSNAME="ZCTI_CL_COURSE" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" MTDNAME="ZCTI_IF_GIL_ABSTR_ROOT~SAVE"/>
   <redefinition CLSNAME="ZCTI_CL_COURSE" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" MTDNAME="ZCTI_IF_GIL_ABSTR_ROOT~SEARCH"/>
   <redefinition CLSNAME="ZCTI_CL_COURSE" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" MTDNAME="ZCTI_IF_GIL_ABSTR~MODIFY"/>
   <redefinition CLSNAME="ZCTI_CL_COURSE" REFCLSNAME="ZCTI_CL_GIL_ABSTR_ROOT" VERSION="1" MTDNAME="ZCTI_IF_GIL_ABSTR~READ"/>
  </inheritance>
  <interfaceMethod CLSNAME="ZCTI_CL_COURSE" CPDNAME="ZCTI_IF_GIL_ABSTR~MODIFY">
   <source>METHOD zcti_if_gil_abstr~modify.

  DATA: lr_root_list TYPE REF TO if_genil_cont_root_objectlist,
        lr_object TYPE REF TO if_genil_cont_root_object,
        lr_obj_props    TYPE REF TO if_genil_obj_attr_properties,
        lt_changed_attr TYPE crmt_attr_name_tab,
        lt_return       TYPE bapiret2_t,
        ls_obj_inst     TYPE crmt_genil_obj_instance,
        lr_msg_cont     TYPE REF TO cl_crm_genil_bapi_mess_cont.

  DATA: ls_attributes   TYPE zcti_st_course_attr,
        ls_key TYPE zcti_st_course_key.

* casting - to identify the interface we are working with.
  TRY.
* we expect a list of root objects
      lr_root_list ?= iv_ref.
    CATCH: cx_sy_assign_cast_error.
* else exit: should never happen
      EXIT.
  ENDTRY.

  ls_obj_inst-object_name = me-&gt;object_name.

* loop on the object list
  lr_object = lr_root_list-&gt;get_first( ).
  WHILE lr_object IS BOUND.
* set message container for this order
*    set_msg_container( lr_object ).

* check if the order was changed at all
    IF lr_object-&gt;get_delta_flag( ) =
                 if_genil_cont_simple_object=&gt;delta_changed.
* now we retrieve the attribute property object to get the modify details
      lr_obj_props = lr_object-&gt;get_attr_props_obj( ).
* which attributes were modified?
      CALL METHOD lr_obj_props-&gt;get_name_tab_4_property
        EXPORTING
          iv_property = if_genil_obj_attr_properties=&gt;modified
        IMPORTING
          et_names    = lt_changed_attr.
* get the object key
      CALL METHOD lr_object-&gt;get_key
        IMPORTING
          es_key = ls_key-guid.
* get the attribute structure
      CALL METHOD lr_object-&gt;get_attributes
        IMPORTING
          es_attributes = ls_attributes.

* call the API
      CALL METHOD zcti_cl_course_api=&gt;write
        EXPORTING
          is_key            = ls_key
          is_attributes     = ls_attributes
          it_changed_fields = lt_changed_attr
        IMPORTING
          et_return         = lt_return.

* add the object to the changed objects list
      ls_obj_inst-object_id =
         cl_crm_genil_container_tools=&gt;build_object_id( ls_key-guid ).
      APPEND ls_obj_inst TO ct_changed_objects.

* put all messages into the message container
      IF lt_return IS NOT INITIAL.
        lr_msg_cont ?= lr_object-&gt;get_message_container( ).
        lr_msg_cont-&gt;add_messages(
                     iv_object_name   = me-&gt;object_name
                     iv_object_id     = ls_obj_inst-object_id
                     it_bapi_messages = lt_return ).
      ENDIF.

* now we proceed with the dependent objects
      CALL METHOD zcti_if_gil_abstr~modify_children
        EXPORTING
          iv_object          = lr_object
        CHANGING
          ct_changed_objects = ct_changed_objects.

* pick next object in the list
      lr_object = lr_root_list-&gt;get_next( ).

    ENDIF.

  ENDWHILE.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_COURSE" CPDNAME="ZCTI_IF_GIL_ABSTR~READ">
   <source>METHOD zcti_if_gil_abstr~read.

  DATA: lr_root_list TYPE REF TO if_genil_cont_root_objectlist,
        lr_object TYPE REF TO if_genil_container_object,
        ls_key TYPE zcti_st_course_key,
        ls_attrs TYPE zcti_st_course_attr.

  FIELD-SYMBOLS: &lt;req_obj&gt; TYPE crmt_request_obj.

* casting - to identify the interface we are working with.
  TRY.
*     we expect a list of root objects
      lr_root_list ?= iv_ref.
    CATCH: cx_sy_assign_cast_error.
*     else exit: should never happen
      EXIT.
  ENDTRY.

* loop on list of objects
* Note: If the API can read multiple order at once the coding will
* change slightly!
  lr_object = lr_root_list-&gt;get_first( ).
  WHILE lr_object IS BOUND.
*   check if attributes should be read
    IF lr_object-&gt;check_attr_requested( ) = abap_true.
      CALL METHOD lr_object-&gt;get_key
        IMPORTING
          es_key = ls_key-guid.

* Note: The request object restricts the attributes to read.
* If their is no request object entry or the attributes table is
* empty all attributes are requested!
      READ TABLE it_request_objects ASSIGNING &lt;req_obj&gt; WITH KEY
                  object_name = me-&gt;object_name.
      IF sy-subrc IS NOT INITIAL OR &lt;req_obj&gt;-requested_attr IS INITIAL.
*       no restrictions
      ELSE.
*       only specific attributes to read
      ENDIF.

* Since our API does not support selective attribute access
* we ignore the restriction!

*     call the api to read the data
      CALL METHOD zcti_cl_course_api=&gt;read
        EXPORTING
          is_key        = ls_key
        IMPORTING
          es_attributes = ls_attrs
        EXCEPTIONS
          no_entry      = 1.

      IF sy-subrc = 0.
*       put attributes to the container
        lr_object-&gt;set_attributes( ls_attrs ).

*       set attribute properties, which results in Editable fields
        set_attr_properties( lr_object ).
      ENDIF.

    ENDIF.
*   check if dependent objects (items) should be read
    IF lr_object-&gt;check_rels_requested( ) = abap_true.
*     process the directly dependent objects
      zcti_if_gil_abstr~process_children(
               it_request_objects = it_request_objects
               iv_object           = lr_object ).
    ENDIF.
    lr_object = lr_root_list-&gt;get_next( ).
  ENDWHILE.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_COURSE" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~CREATE">
   <source>METHOD zcti_if_gil_abstr_root~create.
  DATA: lv_guid TYPE crmt_genil_object_guid.
  DATA: ls_key TYPE zcti_st_course_key.

*  ls_key = is_parameters.
  MOVE-CORRESPONDING is_parameters TO ls_key.

* create IV_NUMBER orders
  DO iv_number TIMES.
** create guid
*    CALL FUNCTION &apos;GUID_CREATE&apos;
*      IMPORTING
*        ev_guid_16 = ls_key-guid.

* call API
    zcti_cl_course_api=&gt;create( CHANGING cs_key = ls_key ).

* add the new object to the container
    TRY.
        iv_root_list-&gt;add_object( iv_object_name = me-&gt;object_name
                                   is_object_key  = ls_key-guid ).
      CATCH cx_crm_genil_duplicate_rel cx_crm_genil_model_error.
* This exception would happen if the object &apos;Order&apos; is unknown by
* the model
    ENDTRY.
  ENDDO.
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_COURSE" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~DELETE">
   <source>METHOD zcti_if_gil_abstr_root~delete.
  DATA: ls_key TYPE zcti_st_course_key.

  ls_key-guid = iv_guid.

  CALL METHOD zcti_cl_course_api=&gt;delete
    EXPORTING
      is_key        = ls_key
    EXCEPTIONS
      delete_failed = 1
      OTHERS        = 2.
  IF sy-subrc = 0.
    rv_success = abap_true.
  ELSE.
    rv_success = abap_false.
  ENDIF.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_COURSE" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~LOCK">
   <source>METHOD zcti_if_gil_abstr_root~lock.

  DATA: ls_key TYPE zcti_st_course_key.

  ls_key-guid = iv_guid.
  CALL METHOD zcti_cl_course_api=&gt;lock
    EXPORTING
      is_key      = ls_key
    EXCEPTIONS
      lock_failed = 1
      OTHERS      = 2.
  IF sy-subrc = 0.
    rv_success = abap_true.
  ELSE.
    rv_success = abap_false.
  ENDIF.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_COURSE" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~SAVE">
   <source>METHOD zcti_if_gil_abstr_root~save.
  DATA: ls_key TYPE zcti_st_course_key.

  ls_key-guid = iv_guid.
  CALL METHOD zcti_cl_course_api=&gt;save
    EXPORTING
      is_key      = ls_key
    EXCEPTIONS
      save_failed = 1
      OTHERS      = 2.
  IF sy-subrc = 0.
    rv_success = abap_true.
  ELSE.
    rv_success = abap_false.
  ENDIF.

ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCTI_CL_COURSE" CPDNAME="ZCTI_IF_GIL_ABSTR_ROOT~SEARCH">
   <source>METHOD zcti_if_gil_abstr_root~search.
  DATA: lr_msg_cont    TYPE REF TO cl_crm_genil_global_mess_cont,
        lr_object      TYPE REF TO if_genil_cont_root_object.

  DATA: lt_result_keys TYPE zcti_tt_course_key,
        ls_key TYPE zcti_st_course_key.

* call search api
  CALL METHOD zcti_cl_course_api=&gt;search
    EXPORTING
      is_parameters = is_parameters
    IMPORTING
      et_keys       = lt_result_keys.

  IF lt_result_keys IS INITIAL.
* no orders where found -&gt; send a message
    lr_msg_cont = iv_root_list-&gt;get_global_message_container( ).
    lr_msg_cont-&gt;add_message(
       iv_msg_type       = if_genil_message_container=&gt;mt_error
       iv_msg_id         = &apos;CRM_GENIL_RFCL&apos;
       iv_msg_number     = &apos;000&apos;
       iv_msg_v1         = &apos;Nothing found&apos;
       iv_show_only_once = abap_true ).
  ELSE.
* fill data container
    LOOP AT lt_result_keys INTO ls_key.
* Add an new object for each found objects
* Note: The result object in our exsample is &apos;Course&apos;. Since this is a
* root object the object ID must be a RAW16 GUID!
      TRY.
          lr_object = iv_root_list-&gt;add_object(
             iv_object_name = me-&gt;object_name
             is_object_key  = ls_key-guid ).
* flag it as direct query result
          lr_object-&gt;set_query_root( abap_true ).
        CATCH cx_crm_genil_duplicate_rel cx_crm_genil_model_error.
* Since the given object name is correct this could not happen!
      ENDTRY.
    ENDLOOP.
  ENDIF.
ENDMETHOD.</source>
  </interfaceMethod>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT" CMPNAME="COURSE" VERSION="1" LANGU="E" DESCRIPT="Context node" EXPOSURE="2" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONEN_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT" CMPNAME="ZCOURSE" VERSION="1" LANGU="E" DESCRIPT="Type reference for wizard created context node" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONEN_CN00" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.
* create context nodes

* Added by wizard
CREATE_Course( ).
endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT" CMPNAME="CREATE_COURSE" VERSION="1" LANGU="E" DESCRIPT="Create (and bind) context node Course" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_COURSE.
    DATA:
      model        TYPE REF TO if_bsp_model,
      coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper,
      entity       TYPE REF TO cl_crm_bol_entity,    &quot;#EC *
      entity_col   TYPE REF TO if_bol_entity_col.    &quot;#EC *

    model = owner-&gt;create_model(

        class_name     = &apos;ZL_ZCTI_COU_BSPWDCOMPONEN_CN00&apos;

        model_id       = &apos;Course&apos; ). &quot;#EC NOTEXT
    Course ?= model.
    CLEAR model.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN" CMPNAME="CONTROLLER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;BSPWDComponent&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN" REFCLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.


    super-&gt;constructor( ).
    controller_id = controller.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_BSPWDCOMPONEN_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_COMPONENT_CONTROLLER" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN_IMPL" REFCLSNAME="ZL_ZCTI_COU_BSPWDCOMPONEN" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW_CTXT" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_CONTEXT">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CONNECT_NODES"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW_CTXT" REFCLSNAME="CL_BSP_WD_CONTEXT" VERSION="1" MTDNAME="CREATE_CONTEXT_NODES"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CONNECT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONNECT_NODES.

    DATA: coll_wrapper TYPE REF TO cl_bsp_wd_collection_wrapper.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_CONTEXT" CMPNAME="CREATE_CONTEXT_NODES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_CONTEXT_NODES.


* create context nodes


endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_BSP_WD_WINDOW">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZL_ZCTI_COU_MAINWINDOW" CMPNAME="TYPED_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZL_ZCTI_COU_MAINWINDOW_CTXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="CALL_OUTBOUND_PLUG"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="WD_CREATE_CONTEXT"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW" REFCLSNAME="CL_BSP_WD_WINDOW" VERSION="1" MTDNAME="WD_DESTROY_CONTEXT"/>
  </inheritance>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="CALL_OUTBOUND_PLUG" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CALL_OUTBOUND_PLUG.

    data: LV_PLUG_METHOD type SEOCMPNAME.

    concatenate &apos;OP_&apos; IV_OUTBOUND_PLUG into LV_PLUG_METHOD.
    translate LV_PLUG_METHOD to upper case.               &quot;#EC SYNTCHAR

    try.
        if IV_DATA_COLLECTION is bound.
          call method (LV_PLUG_METHOD)
            EXPORTING
              IV_DATA_COLLECTION = IV_DATA_COLLECTION.
        else.
          call method (LV_PLUG_METHOD).
        endif.
      catch CX_SY_DYN_CALL_ERROR.
        raise exception type CX_BSP_WD_INCORRECT_IMPLEMENT
          exporting
            TEXTID     =
              CX_BSP_WD_INCORRECT_IMPLEMENT=&gt;WINDOW_PLUG_UNDEFINED
            CONTROLLER = ME-&gt;VIEW_ID
            PLUG       = IV_OUTBOUND_PLUG.
    endtry.

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW" CMPNAME="OP_DETAILS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_MAINWINDOW" CMPNAME="OP_DETAILS" SCONAME="IV_DATA_COLLECTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_BOL_BO_COL" PAROPTIONL="X"/>
   <source>method OP_DETAILS.
* Added by wizard: Outbound plug &apos;DETAILS&apos;

endmethod.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW" CMPNAME="OP_NEW" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZL_ZCTI_COU_MAINWINDOW" CMPNAME="OP_NEW" SCONAME="IV_DATA_COLLECTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_BOL_BO_COL" PAROPTIONL="X"/>
   <source>method OP_NEW.
* Added by wizard: Outbound plug &apos;NEW&apos;

endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="WD_CREATE_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_CREATE_CONTEXT.


*   create the context
    context = cl_bsp_wd_context=&gt;get_instance(
          iv_controller = me
          iv_type = &apos;ZL_ZCTI_COU_MAINWINDOW_CTXT&apos; ).

    typed_context ?= context.


endmethod.</source>
  </method>
  <method CLSNAME="CL_BSP_WD_WINDOW" CMPNAME="WD_DESTROY_CONTEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WD_DESTROY_CONTEXT.

    CLEAR me-&gt;typed_context.
    super-&gt;wd_destroy_context( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZL_ZCTI_COU_MAINWINDOW_IMPL" VERSION="1" LANGU="E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW">
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZL_ZCTI_COU_MAINWINDOW_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW" VERSION="1" MTDNAME="IF_BSP_WD_HISTORY_STATE_DESCR~GET_STATE_DESCRIPTION"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW" VERSION="1" MTDNAME="OP_DETAILS"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW" VERSION="1" MTDNAME="OP_NEW"/>
   <redefinition CLSNAME="ZL_ZCTI_COU_MAINWINDOW_IMPL" REFCLSNAME="ZL_ZCTI_COU_MAINWINDOW" VERSION="1" MTDNAME="WD_DESTROY"/>
  </inheritance>
  <interfaceMethod CLSNAME="ZL_ZCTI_COU_MAINWINDOW_IMPL" CPDNAME="IF_BSP_WD_HISTORY_STATE_DESCR~GET_STATE_DESCRIPTION">
   <source>METHOD if_bsp_wd_history_state_descr~get_state_description.
  description = &apos;Course Search&apos;.
ENDMETHOD.</source>
  </interfaceMethod>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW" CMPNAME="OP_DETAILS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD op_details.
  &quot;fire outbound plug of Navigation Link TODETAILS source in Main Window
  me-&gt;fire_outbound_plug( iv_outbound_plug = &apos;DETAILS&apos; iv_data_collection = iv_data_collection ).
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW" CMPNAME="OP_NEW" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD op_new.
  me-&gt;fire_outbound_plug( iv_outbound_plug = &apos;NEW&apos; iv_data_collection = iv_data_collection ).
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZL_ZCTI_COU_MAINWINDOW" CMPNAME="WD_DESTROY" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD wd_destroy.
  RAISE EVENT history_trigger.
  super-&gt;wd_destroy( ).
ENDMETHOD.</source>
  </method>
 </CLAS>
 <DEVC DEVCLASS="ZCTI_CRM" CTEXT="CTI CRM UI" LANGUAGE="E" MASTERLANG="E" KORRFLAG="X" DLVUNIT="HOME" NAMESPACE="/0CUST/" PARENTCL="ZHCTI" CREATED_BY="SAPUSER" CREATED_ON="20160211" CHANGED_BY="SAPUSER" CHANGED_ON="20160211" PROJECT_GUID="00000000000000000000000000000000"/>
 <DEVC DEVCLASS="ZCTI_API" CTEXT="CTI API Layer" LANGUAGE="E" MASTERLANG="E" KORRFLAG="X" DLVUNIT="HOME" NAMESPACE="/0CUST/" PARENTCL="ZHCTI" CREATED_BY="SAPUSER" CREATED_ON="20160211" CHANGED_BY="SAPUSER" CHANGED_ON="20160211" PROJECT_GUID="00000000000000000000000000000000"/>
 <DEVC DEVCLASS="ZCTI_DB" CTEXT="CTI Database Layer" LANGUAGE="E" MASTERLANG="E" KORRFLAG="X" DLVUNIT="HOME" NAMESPACE="/0CUST/" PARENTCL="ZHCTI" CREATED_BY="SAPUSER" CREATED_ON="20160211" CHANGED_BY="SAPUSER" CHANGED_ON="20160211" PROJECT_GUID="00000000000000000000000000000000"/>
 <DEVC DEVCLASS="ZHCTI" CTEXT="Computer Training Institue" LANGUAGE="E" MASTERLANG="E" KORRFLAG="X" DLVUNIT="HOME" NAMESPACE="/0CUST/" RESTRICTED="X" MAINPACK="X" CREATED_BY="SAPUSER" CREATED_ON="20160211" CHANGED_BY="SAPUSER" CHANGED_ON="20160211" PROJECT_GUID="00000000000000000000000000000000"/>
 <DEVC DEVCLASS="ZCTI_WA" CTEXT="CTI Web Application Components" LANGUAGE="E" MASTERLANG="E" KORRFLAG="X" DLVUNIT="HOME" NAMESPACE="/0CUST/" PARENTCL="ZHCTI" CREATED_BY="SAPUSER" CREATED_ON="20160217" CHANGED_BY="SAPUSER" CHANGED_ON="20160217" PROJECT_GUID="00000000000000000000000000000000"/>
 <DOMA DOMNAME="ZCTI_D_ID" MultiLanguageSupport="X">
  <DDLANGUAGE LANGU="E">
   <DD01V DOMNAME="ZCTI_D_ID" DDLANGUAGE="E" DATATYPE="NUMC" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASKLEN="0000" DDTEXT="Unique ID Number" AUTHCLASS="00"/>
  </DDLANGUAGE>
 </DOMA>
 <DTEL ROLLNAME="ZCTI_D_COURSE_ID" DDLANGUAGE="E" DOMNAME="ZCTI_D_ID" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Course ID" REPTEXT="Course ID" SCRTEXT_L="Course ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="NUMC" LENG="000005" DECIMALS="000000" OUTPUTLEN="000005" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZCTI_D_COURSE_ID" DDLANGUAGE="E" DOMNAME="ZCTI_D_ID" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Course ID" REPTEXT="Course ID" SCRTEXT_L="Course ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="NUMC" LENG="000005" DECIMALS="000000" OUTPUTLEN="000005" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZCTI_D_DELTA" DDLANGUAGE="E" DOMNAME="CHAR1" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Delta - &apos;C&apos; New &apos;M&apos; Modif &apos;D&apos; Delete" REPTEXT="&apos;C&apos; New &apos;M&apos; Modif &apos;D&apos; Delete" SCRTEXT_L="&apos;C&apos; M&apos; &apos;D&apos;" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZCTI_D_DELTA" DDLANGUAGE="E" DOMNAME="CHAR1" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Delta - &apos;C&apos; New &apos;M&apos; Modif &apos;D&apos; Delete" REPTEXT="&apos;C&apos; New &apos;M&apos; Modif &apos;D&apos; Delete" SCRTEXT_L="&apos;C&apos; M&apos; &apos;D&apos;" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZCTI_D_CFEE" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Course Fee" REPTEXT="Course Fee" SCRTEXT_L="Course Fee" AUTHCLASS="00" DTELMASTER="E" DATATYPE="INT4" LENG="000010" DECIMALS="000000" OUTPUTLEN="000011" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZCTI_D_CFEE" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Course Fee" REPTEXT="Course Fee" SCRTEXT_L="Course Fee" AUTHCLASS="00" DTELMASTER="E" DATATYPE="INT4" LENG="000010" DECIMALS="000000" OUTPUTLEN="000011"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZCTI_D_CDETAILS" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Course Details" REPTEXT="Course Details" SCRTEXT_L="Course Details" AUTHCLASS="00" DTELMASTER="E" DATATYPE="STRG" LENG="000000" DECIMALS="000000" OUTPUTLEN="000000" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZCTI_D_CDETAILS" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Course Details" REPTEXT="Course Details" SCRTEXT_L="Course Details" AUTHCLASS="00" DTELMASTER="E" DATATYPE="STRG" LENG="000000" DECIMALS="000000" OUTPUTLEN="000000"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZCTI_D_CNAME" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Course Name" REPTEXT="Course Name" SCRTEXT_L="Course Name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" DECIMALS="000000" OUTPUTLEN="000050" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZCTI_D_CNAME" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DDTEXT="Course Name" REPTEXT="Course Name" SCRTEXT_L="Course Name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" DECIMALS="000000" OUTPUTLEN="000050"/>
  </DDLANGUAGE>
 </DTEL>
 <ENQU VIEWNAME="EZCTI_COURSE" AS4LOCAL="A" AS4VERS="0000" DDLANGUAGE="E" AGGTYPE="E" AUTHCLASS="00" ROOTTAB="ZCTI_DB_COURSE" DDTEXT="CTI Course Lock Object">
  <dd26e VIEWNAME="EZCTI_COURSE" TABNAME="ZCTI_DB_COURSE" TABPOS="0001" FORTABNAME="ZCTI_DB_COURSE" ENQMODE="E"/>
  <dd27p VIEWNAME="EZCTI_COURSE" OBJPOS="0001" DDLANGUAGE="E" VIEWFIELD="MANDT" TABNAME="ZCTI_DB_COURSE" FIELDNAME="MANDT" KEYFLAG="X" ROLLNAME="MANDT" ROLLNAMEVI="MANDT" ENQMODE="E" DOMNAME="MANDT" DATATYPE="CLNT" FLENGTH="000003" ENTITYTAB="T000" INTTYPE="C" INTLEN="000006" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client"/>
  <dd27p VIEWNAME="EZCTI_COURSE" OBJPOS="0002" DDLANGUAGE="E" VIEWFIELD="GUID" TABNAME="ZCTI_DB_COURSE" FIELDNAME="GUID" KEYFLAG="X" ROLLNAME="CRMT_OBJECT_GUID" ROLLNAMEVI="CRMT_OBJECT_GUID" ENQMODE="E" DOMNAME="SYSUUID" DATATYPE="RAW" FLENGTH="000016" INTTYPE="X" INTLEN="000016" HEADLEN="22" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000032" DECIMALS="000000" DDTEXT="GUID of a CRM Order Object" REPTEXT="Object GUID" SCRTEXT_S="ObjectGUID" SCRTEXT_M="Object GUID" SCRTEXT_L="Object GUID"/>
  <ddena VIEWNAME="EZCTI_COURSE" TABNAME="ZCTI_DB_COURSE" FIELDNAME="MANDT" VIEWFIELD="MANDT"/>
  <ddena VIEWNAME="EZCTI_COURSE" TABNAME="ZCTI_DB_COURSE" FIELDNAME="GUID" VIEWFIELD="GUID"/>
 </ENQU>
 <INTF CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" VERSION="1" LANGU="E" DESCRIPT="GenIL Root Object Impl. Interface" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" UNICODE="X">
  <typeUsage CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <method CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="CREATE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="CREATE" SCONAME="IV_NUMBER" VERSION="1" LANGU="E" DESCRIPT="Natural number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="INT4"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="CREATE" SCONAME="IS_PARAMETERS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="CREATE" SCONAME="IV_ROOT_LIST" VERSION="1" LANGU="E" DESCRIPT="Data Container - Root Object List Interface" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_GENIL_CONT_ROOT_OBJECTLIST"/>
  </method>
  <method CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="DELETE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="DELETE" SCONAME="IV_GUID" VERSION="1" LANGU="E" DESCRIPT="Object GUID in Generic Interaction Layer" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_GENIL_OBJECT_GUID"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="DELETE" SCONAME="RV_SUCCESS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
  </method>
  <method CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="LOCK" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="LOCK" SCONAME="IV_GUID" VERSION="1" LANGU="E" DESCRIPT="Object GUID in Generic Interaction Layer" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_GENIL_OBJECT_GUID"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="LOCK" SCONAME="RV_SUCCESS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
  </method>
  <method CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="SAVE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="SAVE" SCONAME="IV_GUID" VERSION="1" LANGU="E" DESCRIPT="Object GUID in Generic Interaction Layer" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_GENIL_OBJECT_GUID"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="SAVE" SCONAME="RV_SUCCESS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
  </method>
  <method CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="SEARCH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="SEARCH" SCONAME="IS_PARAMETERS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="SEARCH" SCONAME="IS_REQUEST_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Structure for Specification of Object Request" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_REQUEST_OBJ"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR_ROOT" CMPNAME="SEARCH" SCONAME="IV_ROOT_LIST" VERSION="1" LANGU="E" DESCRIPT="Data Container - Root Object List Interface" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_GENIL_CONT_ROOT_OBJECTLIST"/>
  </method>
 </INTF>
 <INTF CLSNAME="ZCTI_IF_GIL_ABSTR" VERSION="1" LANGU="E" DESCRIPT="GenIL Object Impl. Interface" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" UNICODE="X">
  <method CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="MODIFY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="MODIFY" SCONAME="IV_REF" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="MODIFY" SCONAME="CT_CHANGED_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Table of Object Instances in Generic IL" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_GENIL_OBJ_INSTANCE_TAB"/>
  </method>
  <method CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="MODIFY_CHILDREN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="MODIFY_CHILDREN" SCONAME="IV_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Data Container - Object Interface" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_GENIL_CONTAINER_OBJECT"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="MODIFY_CHILDREN" SCONAME="CT_CHANGED_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Table of Object Instances in Generic IL" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_GENIL_OBJ_INSTANCE_TAB"/>
  </method>
  <method CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="PROCESS_CHILDREN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="PROCESS_CHILDREN" SCONAME="IV_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Data Container - Object Interface" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_GENIL_CONTAINER_OBJECT"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="PROCESS_CHILDREN" SCONAME="IT_REQUEST_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Table of Object Request Specifications" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_REQUEST_OBJ_TAB"/>
  </method>
  <method CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="READ" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="READ" SCONAME="IT_REQUEST_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Table of Object Request Specifications" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CRMT_REQUEST_OBJ_TAB"/>
   <parameter CLSNAME="ZCTI_IF_GIL_ABSTR" CMPNAME="READ" SCONAME="IV_REF" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
  </method>
 </INTF>
 <NROB OBJECT="ZCTI_ID" DOMLEN="ZCTI_D_ID" PERCENTAGE="80.0 " BUFFER="X" NOIVBUFFER="00000000">
  <TNROT LANGU="E" OBJECT="ZCTI_ID" TXT="CTI Unique IDs" TXTSHORT="CTI IDs Number Range"/>
  <INRIV NRRANGENR="01" TOYEAR="0000" FROMNUMBER="00001" TONUMBER="09999" NRLEVEL="00000000000000000039"/>
  <INRIV NRRANGENR="02" TOYEAR="0000" FROMNUMBER="10000" TONUMBER="19999" NRLEVEL="00000000000000010000"/>
 </NROB>
 <SICF ICF_NAME="ZCTI_COURSE_OV" ICFPARGUID="907RM5PM0WS1BRG2HAYGJYC1N" ICFNODGUID="DLUXPNIMDKTWZP07ZO0IMGGPA" ICFCHILDNO="0 " ICFALIASNO="0 " ICF_OPTION="0 " ICF_TIME="000000" ICF_CUSER="SAPUSER" ICF_CDATE="20160220" ICF_MUSER="SAPUSER" ICF_MDATE="20160220" ICF_AUTHRC="0" ORIG_NAME="zcti_course_ov">
  <icfdocu ICF_NAME="ZCTI_COURSE_OV" ICFPARGUID="907RM5PM0WS1BRG2HAYGJYC1N" ICF_LANGU="E" ICF_DOCU="CTI Course Overview Page"/>
 </SICF>
 <TABL TABNAME="ZCTI_ST_COURSE_ATTR_M" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" LANGDEP="X" DDTEXT="CTI Course Attribute Structure for Modification Tracking" AUTHCLASS="00" PROZPUFF="000" EXCLASS="0">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR_M" FIELDNAME=".INCLUDE" DDLANGUAGE="E" POSITION="0001" ADMINFIELD="0" INTLEN="000000" PRECFIELD="ZCTI_ST_COURSE_ATTR" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="      S" MASKLEN="0000" DDTEXT="Course Attributes Structure" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR_M" FIELDNAME="GUID" DDLANGUAGE="E" POSITION="0002" ROLLNAME="CRMT_OBJECT_GUID" ADMINFIELD="1" INTTYPE="X" INTLEN="000016" DOMNAME="SYSUUID" ROUTPUTLEN="000000" HEADLEN="22" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="RAW" LENG="000016" OUTPUTLEN="000032" DECIMALS="000000" MASK="  RAW E" MASKLEN="0000" DDTEXT="GUID of a CRM Order Object" REPTEXT="Object GUID" SCRTEXT_S="ObjectGUID" SCRTEXT_M="Object GUID" SCRTEXT_L="Object GUID" DOMNAME3L="SYSUUID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR_M" FIELDNAME="ID" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZCTI_D_COURSE_ID" ADMINFIELD="1" INTTYPE="N" INTLEN="000010" DOMNAME="ZCTI_D_ID" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="NUMC" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Course ID" REPTEXT="Course ID" SCRTEXT_L="Course ID" DOMNAME3L="ZCTI_D_ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR_M" FIELDNAME="NAME" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZCTI_D_CNAME" ADMINFIELD="1" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Course Name" REPTEXT="Course Name" SCRTEXT_L="Course Name" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR_M" FIELDNAME="DETAILS" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZCTI_D_CDETAILS" ADMINFIELD="1" INTTYPE="g" INTLEN="000008" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="STRG" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRGE" MASKLEN="0000" DDTEXT="Course Details" REPTEXT="Course Details" SCRTEXT_L="Course Details" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR_M" FIELDNAME="FEE" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZCTI_D_CFEE" ADMINFIELD="1" INTTYPE="X" INTLEN="000004" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000011" DECIMALS="000000" MASK="  INT4E" MASKLEN="0000" DDTEXT="Course Fee" REPTEXT="Course Fee" SCRTEXT_L="Course Fee" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR_M" FIELDNAME="DELTA" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZCTI_D_DELTA" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CHAR1" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Delta - &apos;C&apos; New &apos;M&apos; Modif &apos;D&apos; Delete" REPTEXT="&apos;C&apos; New &apos;M&apos; Modif &apos;D&apos; Delete" SCRTEXT_L="&apos;C&apos; M&apos; &apos;D&apos;" DOMNAME3L="CHAR1" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TABL TABNAME="ZCTI_ST_COURSE_KEY" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Course Key Structure" AUTHCLASS="00" PROZPUFF="000" EXCLASS="0">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_KEY" FIELDNAME="GUID" DDLANGUAGE="E" POSITION="0001" ROLLNAME="CRMT_OBJECT_GUID" ADMINFIELD="0" INTTYPE="X" INTLEN="000016" DOMNAME="SYSUUID" ROUTPUTLEN="000000" HEADLEN="22" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="RAW" LENG="000016" OUTPUTLEN="000032" DECIMALS="000000" MASK="  RAW E" MASKLEN="0000" DDTEXT="GUID of a CRM Order Object" REPTEXT="Object GUID" SCRTEXT_S="ObjectGUID" SCRTEXT_M="Object GUID" SCRTEXT_L="Object GUID" DOMNAME3L="SYSUUID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_KEY" FIELDNAME="ID" DDLANGUAGE="E" POSITION="0002" ROLLNAME="ZCTI_D_COURSE_ID" ADMINFIELD="0" INTTYPE="N" INTLEN="000010" DOMNAME="ZCTI_D_ID" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="NUMC" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Course ID" REPTEXT="Course ID" SCRTEXT_L="Course ID" DOMNAME3L="ZCTI_D_ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TABL TABNAME="ZCTI_ST_COURSE_CREATE" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Course Create Structure" AUTHCLASS="00" PROZPUFF="000" EXCLASS="0">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_CREATE" FIELDNAME="ID" DDLANGUAGE="E" POSITION="0001" ROLLNAME="ZCTI_D_COURSE_ID" ADMINFIELD="0" INTTYPE="N" INTLEN="000010" DOMNAME="ZCTI_D_ID" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="NUMC" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Course ID" REPTEXT="Course ID" SCRTEXT_L="Course ID" DOMNAME3L="ZCTI_D_ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TABL TABNAME="ZCTI_ST_COURSE_SEARCH" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Course Search Structure" AUTHCLASS="00" PROZPUFF="000" EXCLASS="0">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_SEARCH" FIELDNAME="ID" DDLANGUAGE="E" POSITION="0001" ROLLNAME="ZCTI_D_COURSE_ID" ADMINFIELD="0" INTTYPE="N" INTLEN="000010" DOMNAME="ZCTI_D_ID" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="NUMC" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Course ID" REPTEXT="Course ID" SCRTEXT_L="Course ID" DOMNAME3L="ZCTI_D_ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_SEARCH" FIELDNAME="NAME" DDLANGUAGE="E" POSITION="0002" ROLLNAME="ZCTI_D_CNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Course Name" REPTEXT="Course Name" SCRTEXT_L="Course Name" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TABL TABNAME="ZCTI_DB_COURSE" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="Course Table" AUTHCLASS="00" CONTFLAG="A" PROZPUFF="000" EXCLASS="4">
  <dd09l TABNAME="ZCTI_DB_COURSE" AS4LOCAL="A" AS4VERS="0000" TABKAT="1" TABART="APPL0" SCHFELDANZ="000" BUFALLOW="N"/>
  <dd03p TABNAME="ZCTI_DB_COURSE" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" DEFFDNAME="CLIENT" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_COURSE" FIELDNAME="GUID" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="CRMT_OBJECT_GUID" ADMINFIELD="0" INTTYPE="X" INTLEN="000016" NOTNULL="X" DOMNAME="SYSUUID" ROUTPUTLEN="000000" HEADLEN="22" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="RAW" LENG="000016" OUTPUTLEN="000032" DECIMALS="000000" MASK="  RAW E" MASKLEN="0000" DDTEXT="GUID of a CRM Order Object" REPTEXT="Object GUID" SCRTEXT_S="ObjectGUID" SCRTEXT_M="Object GUID" SCRTEXT_L="Object GUID" DOMNAME3L="SYSUUID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_COURSE" FIELDNAME="ID" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZCTI_D_COURSE_ID" ADMINFIELD="0" INTTYPE="N" INTLEN="000010" DOMNAME="ZCTI_D_ID" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="NUMC" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Course ID" REPTEXT="Course ID" SCRTEXT_L="Course ID" DOMNAME3L="ZCTI_D_ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_COURSE" FIELDNAME="NAME" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZCTI_D_CNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Course Name" REPTEXT="Course Name" SCRTEXT_L="Course Name" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_COURSE" FIELDNAME="DETAILS" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZCTI_D_CDETAILS" ADMINFIELD="0" INTTYPE="g" INTLEN="000008" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="STRG" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRGE" MASKLEN="0000" DDTEXT="Course Details" REPTEXT="Course Details" SCRTEXT_L="Course Details" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_COURSE" FIELDNAME="FEE" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZCTI_D_CFEE" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000011" DECIMALS="000000" MASK="  INT4E" MASKLEN="0000" DDTEXT="Course Fee" REPTEXT="Course Fee" SCRTEXT_L="Course Fee" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TABL TABNAME="ZCTI_DB_MODEL_IL" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="CTI GenIL model" AUTHCLASS="00" CONTFLAG="A" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZCTI_DB_MODEL_IL" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" SCHFELDANZ="000" BUFALLOW="N"/>
  <dd03p TABNAME="ZCTI_DB_MODEL_IL" FIELDNAME="OBJECT_A" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="CRMT_EXT_OBJ_A_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" NOTNULL="X" DOMNAME="CRM_OBJEXT_NAME" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="External Name of Source Object" REPTEXT="Source Object" SCRTEXT_S="Src. Obj." SCRTEXT_M="Source Obj." SCRTEXT_L="Source Object" DOMNAME3L="CRM_OBJEXT_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_MODEL_IL" FIELDNAME="RELATION_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="CRMT_RELATION_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" NOTNULL="X" DOMNAME="CRM_RELATION_NAME" ROUTPUTLEN="000000" HEADLEN="14" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Relation Name" REPTEXT="Relation Name" SCRTEXT_S="Rel. Name" SCRTEXT_M="Relation Name" SCRTEXT_L="Relation Name" DOMNAME3L="CRM_RELATION_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_MODEL_IL" FIELDNAME="OBJECT_B" DDLANGUAGE="E" POSITION="0003" ROLLNAME="CRMT_EXT_OBJ_B_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="CRM_OBJEXT_NAME" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="External Name of Assigned Object" REPTEXT="Assigned Object" SCRTEXT_S="AssgndObj." SCRTEXT_M="Assigned Obj." SCRTEXT_L="Assigned Object" DOMNAME3L="CRM_OBJEXT_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_MODEL_IL" FIELDNAME="CARD_A" DDLANGUAGE="E" POSITION="0004" ROLLNAME="CRMT_CARD_A" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CRM_CARD" ROUTPUTLEN="000000" HEADLEN="35" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Cardinality of Source Object" REPTEXT="Cardinality of Source Object" SCRTEXT_S="SObj.Card" SCRTEXT_M="Srce Obj. Card." SCRTEXT_L="Card. of Srce Object" DOMNAME3L="CRM_CARD" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_MODEL_IL" FIELDNAME="CARD_B" DDLANGUAGE="E" POSITION="0005" ROLLNAME="CRMT_CARD_B" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CRM_CARD" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="10" SCRLEN2="15" SCRLEN3="30" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Cardinality of the Assigned Object" REPTEXT="Cardinality of the Assigned Object" SCRTEXT_S="Card. B" SCRTEXT_M="Cardinality B" SCRTEXT_L="Card. of the Assigned Object" DOMNAME3L="CRM_CARD" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_MODEL_IL" FIELDNAME="RELATION_KIND" DDLANGUAGE="E" POSITION="0006" ROLLNAME="CRMT_RELATION_KIND" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CRM_RELATION_KIND" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Type of Object Relation" REPTEXT="Relation Type" SCRTEXT_S="Rel. Type" SCRTEXT_M="Relation Type" SCRTEXT_L="Relation Type" DOMNAME3L="CRM_RELATION_KIND" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_MODEL_IL" FIELDNAME="NOT_WS_ENABLED" DDLANGUAGE="E" POSITION="0007" ROLLNAME="CRMT_BUIL_WS_DISABLED" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CRM_GENIL_BOOLEAN" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="20" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Specifies if the object is not enabled for a web service" REPTEXT="Web service disabled" SCRTEXT_S="WS-dis." SCRTEXT_M="Web service disabled" SCRTEXT_L="Web service disabled" DOMNAME3L="CRM_GENIL_BOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_MODEL_IL" FIELDNAME="DO_NOT_BUFFER" DDLANGUAGE="E" POSITION="0008" ROLLNAME="CRMT_BUIL_DO_NOT_BUFFER" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CRM_GENIL_BOOLEAN" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GenIL Indicator: Do Not Buffer" REPTEXT="No Buffer" SCRTEXT_S="No Buffer" SCRTEXT_M="Do Not Buffer" SCRTEXT_L="Do Not Buffer" DOMNAME3L="CRM_GENIL_BOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TABL TABNAME="ZCTI_DB_ALLOB_IL" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="CTI All Objects in Model" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="A" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZCTI_DB_ALLOB_IL" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" SCHFELDANZ="000" BUFALLOW="N"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="OBJECT_NAME" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="CRMT_EXT_OBJ_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" NOTNULL="X" DOMNAME="CRM_OBJEXT_NAME" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="External Name of Object" REPTEXT="External Object Name" SCRTEXT_S="Ext.Object" SCRTEXT_M="Ext.Object Name" SCRTEXT_L="External Object Name" DOMNAME3L="CRM_OBJEXT_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="OBJECT_KIND" DDLANGUAGE="E" POSITION="0002" ROLLNAME="CRMT_OBJKIND" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CRM_OBJKIND" ROUTPUTLEN="000000" HEADLEN="15" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Object Type" REPTEXT="Object Type" SCRTEXT_S="ObjectType" SCRTEXT_M="Object Type" SCRTEXT_L="Object Type" DOMNAME3L="CRM_OBJKIND" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="ATTR_STRUCT" DDLANGUAGE="E" POSITION="0003" ROLLNAME="CRMT_BUPA_IL_ATTR_STRUC_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="AS4TAB" ROUTPUTLEN="000000" MEMORYID="DTB" HEADLEN="14" SCRLEN1="10" SCRLEN2="18" SCRLEN3="22" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" ENTITYTAB="DD02L" MASK="  CHARE" MASKLEN="0000" DDTEXT="IL: Name of Attribute Structure" REPTEXT="Att. Structure" SCRTEXT_S="Attribute" SCRTEXT_M="Attrib. Structure" SCRTEXT_L="Attrib. Structure Name" DOMNAME3L="AS4TAB" DEPTH="00" COMPTYPE="E" DEFFDNAME="TABNAME" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="ROOT_OBJECT" DDLANGUAGE="E" POSITION="0004" ROLLNAME="CRMT_EXT_OBJ_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="CRM_OBJEXT_NAME" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="External Name of Object" REPTEXT="External Object Name" SCRTEXT_S="Ext.Object" SCRTEXT_M="Ext.Object Name" SCRTEXT_L="External Object Name" DOMNAME3L="CRM_OBJEXT_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="KEY_STRUCT" DDLANGUAGE="E" POSITION="0005" ROLLNAME="CRMT_BUPA_IL_KEY_STRUC_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="AS4TAB" ROUTPUTLEN="000000" MEMORYID="DTB" HEADLEN="12" SCRLEN1="10" SCRLEN2="18" SCRLEN3="22" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" ENTITYTAB="DD02L" MASK="  CHARE" MASKLEN="0000" DDTEXT="IL: Name of Key Structure" REPTEXT="Key Struc." SCRTEXT_S="Key" SCRTEXT_M="Key Structure" SCRTEXT_L="Key Structure Name" DOMNAME3L="AS4TAB" DEPTH="00" COMPTYPE="E" DEFFDNAME="TABNAME" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="CREATE_STRUCT" DDLANGUAGE="E" POSITION="0006" ROLLNAME="CRMT_BUPA_IL_CREATE_STRUC_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="AS4TAB" ROUTPUTLEN="000000" MEMORYID="DTB" HEADLEN="10" SCRLEN1="10" SCRLEN2="18" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" ENTITYTAB="DD02L" MASK="  CHARE" MASKLEN="0000" DDTEXT="IL: Name of Create Structure" REPTEXT="Create" SCRTEXT_S="Create" SCRTEXT_M="Create Structure" SCRTEXT_L="Create Struct. Name" DOMNAME3L="AS4TAB" DEPTH="00" COMPTYPE="E" DEFFDNAME="TABNAME" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="WS_ENABLED" DDLANGUAGE="E" POSITION="0007" ROLLNAME="CRMT_BUIL_WS_ENABLED" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CRM_GENIL_BOOLEAN" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="20" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Specifies if the object is enabled for a web service" REPTEXT="Web service enabled" SCRTEXT_S="WS-enabled" SCRTEXT_M="Web service enabled" SCRTEXT_L="Web service enabled" DOMNAME3L="CRM_GENIL_BOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="RESULT_OBJ_NAME" DDLANGUAGE="E" POSITION="0008" ROLLNAME="CRMT_EXT_OBJ_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="CRM_OBJEXT_NAME" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="External Name of Object" REPTEXT="External Object Name" SCRTEXT_S="Ext.Object" SCRTEXT_M="Ext.Object Name" SCRTEXT_L="External Object Name" DOMNAME3L="CRM_OBJEXT_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="NON_UNIQUE_PAREN" DDLANGUAGE="E" POSITION="0009" ROLLNAME="CRMT_GENIL_BOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CRM_GENIL_BOOLEAN" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Logical Variable, Similar To ABAP_BOOL from Type Pool ABAP" REPTEXT="Logical Variable" SCRTEXT_S="Log.Vrble" SCRTEXT_M="Log. Variable" SCRTEXT_L="Logical Variable" DOMNAME3L="CRM_GENIL_BOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="DEFAULT_SEARCH" DDLANGUAGE="E" POSITION="0010" ROLLNAME="CRMT_BUIL_DEFAULT_SEARCH" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="FLAG" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Default search flag" REPTEXT="Def. Search" SCRTEXT_S="Def." SCRTEXT_M="Def. Search" SCRTEXT_L="Default Search" DOMNAME3L="FLAG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_DB_ALLOB_IL" FIELDNAME="OBJECT_HDLR" DDLANGUAGE="E" POSITION="0011" ROLLNAME="CRMDT_GENIL_IMPL_CLASS" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Implementation Class for a GENIL Component" REPTEXT="Implementation Class" SCRTEXT_S="Impl.Class" SCRTEXT_M="Implement.Class" SCRTEXT_L="Implementation Class" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TABL TABNAME="ZCTI_ST_COURSE_ATTR" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Course Attributes Structure" AUTHCLASS="00" PROZPUFF="000" EXCLASS="0">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR" FIELDNAME="GUID" DDLANGUAGE="E" POSITION="0001" ROLLNAME="CRMT_OBJECT_GUID" ADMINFIELD="0" INTTYPE="X" INTLEN="000016" DOMNAME="SYSUUID" ROUTPUTLEN="000000" HEADLEN="22" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="RAW" LENG="000016" OUTPUTLEN="000032" DECIMALS="000000" MASK="  RAW E" MASKLEN="0000" DDTEXT="GUID of a CRM Order Object" REPTEXT="Object GUID" SCRTEXT_S="ObjectGUID" SCRTEXT_M="Object GUID" SCRTEXT_L="Object GUID" DOMNAME3L="SYSUUID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR" FIELDNAME="ID" DDLANGUAGE="E" POSITION="0002" ROLLNAME="ZCTI_D_COURSE_ID" ADMINFIELD="0" INTTYPE="N" INTLEN="000010" DOMNAME="ZCTI_D_ID" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="NUMC" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Course ID" REPTEXT="Course ID" SCRTEXT_L="Course ID" DOMNAME3L="ZCTI_D_ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR" FIELDNAME="NAME" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZCTI_D_CNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Course Name" REPTEXT="Course Name" SCRTEXT_L="Course Name" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR" FIELDNAME="DETAILS" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZCTI_D_CDETAILS" ADMINFIELD="0" INTTYPE="g" INTLEN="000008" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="STRG" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRGE" MASKLEN="0000" DDTEXT="Course Details" REPTEXT="Course Details" SCRTEXT_L="Course Details" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZCTI_ST_COURSE_ATTR" FIELDNAME="FEE" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZCTI_D_CFEE" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="00" SCRLEN2="00" SCRLEN3="15" DTELMASTER="E" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000011" DECIMALS="000000" MASK="  INT4E" MASKLEN="0000" DDTEXT="Course Fee" REPTEXT="Course Fee" SCRTEXT_L="Course Fee" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TTYP TYPENAME="ZCTI_TT_COURSE_ATTR" DDLANGUAGE="E" ROWTYPE="ZCTI_ST_COURSE_ATTR" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="K" KEYKIND="N" KEYFDCOUNT="0001" DDTEXT="Course Attribute Table Type" TYPELEN="000140" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000">
  <dd42v TYPENAME="ZCTI_TT_COURSE_ATTR" KEYFDPOS="0001" ROWTYPEPOS="0001" KEYFIELD="GUID"/>
 </TTYP>
 <TTYP TYPENAME="ZCTI_TT_COURSE_KEY" DDLANGUAGE="E" ROWTYPE="ZCTI_ST_COURSE_KEY" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Course Key Table Type" TYPELEN="000026" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZCTI_TT_COURSE_CREATE" DDLANGUAGE="E" ROWTYPE="ZCTI_ST_COURSE_CREATE" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Course Create Table Type" TYPELEN="000010" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZCTI_TT_COURSE" DDLANGUAGE="E" ROWTYPE="ZCTI_DB_COURSE" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Course Table Type" TYPELEN="000144" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZCTI_TT_COURSE_ATTR_M" DDLANGUAGE="E" ROWTYPE="ZCTI_ST_COURSE_ATTR_M" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="CTI Course Attr Table for Delta Tracking" TYPELEN="000144" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZCTI_TT_ALLOB_IL" DDLANGUAGE="E" ROWTYPE="ZCTI_DB_ALLOB_IL" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="CTI GenIL Objects Table Type" TYPELEN="000428" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <WAPA APPLNAME="ZCTI_COURSE_MIN" APPLEXT="ZCTI_COURSE_MIN" STATEFUL="X" DEVCLASS="$TMP" ORIGLANG="E" MODIFLANG="E" TEXT="CTI Course Main Component">
  <page APPLNAME="ZCTI_COURSE_MIN" PAGEKEY="BSPWDCOMPONENT.DO" PAGENAME="BSPWDComponent.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller BSPWDComponent"/>
  <page APPLNAME="ZCTI_COURSE_MIN" PAGEKEY="EMPTY.DO" PAGENAME="Empty.do" PAGETYPE="C" LIFETIME="2" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="Empty View"/>
  <page APPLNAME="ZCTI_COURSE_MIN" PAGEKEY="EMPTY.HTM" PAGENAME="empty.htm" PAGETYPE="V" CONTROLLERURL="CL_BSP_WD_VIEW_CONTR_EMPTY" MIMETYPE="text/html" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="Empty Page">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@extension name=&quot;htmlb&quot; prefix=&quot;htmlb&quot; %&gt;
&lt;!--
&lt;htmlb:group&gt;&lt;htmlb:groupBody&gt;
  &lt;/htmlb:groupBody&gt;&lt;/htmlb:group&gt;
--&gt;</layout>
  </page>
  <page APPLNAME="ZCTI_COURSE_MIN" PAGEKEY="MAINWINDOW.DO" PAGENAME="MainWindow.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller MainWindow"/>
  <page APPLNAME="ZCTI_COURSE_MIN" PAGEKEY="REPOSITORY.XML" PAGENAME="Repository.xml" MIMETYPE="text/xml" LIFETIME="1" STATE="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" NO_SCRIPT="X" VERSION="A" DEVCLASS="$TMP" LANGU="E">
   <layout>&lt;?xml version=&quot;1.0&quot;?&gt;

&lt;!DOCTYPE WebDynProDefinitions SYSTEM &quot;../bc/bsp/sap/BSP_WD_COMPBASE/RuntimeRepositoryV2.dtd&quot;&gt; 

&lt;WebDynProDefinitions version=&quot;2&quot;&gt;

 &lt;!-- Target BSP-component id (might be used during generation) --&gt;

 &lt;Component id=&quot;&quot;&gt;

  &lt;!-- Models, Controllers, and Views section only relevant for a designtime repository used for code generation--&gt;

  &lt;Models&gt;

   &lt;!-- Reference to BOL Component Set --&gt;

   &lt;Model id=&quot;ZCTI&quot;/&gt;

  &lt;/Models&gt;

  &lt;Controllers&gt;

   &lt;!-- Declaration of custom controllers --&gt;

   &lt;Controller id=&quot;BSPWDComponent&quot; type=&quot;COMPONENT&quot;/&gt;

  &lt;/Controllers&gt;

  &lt;Views&gt;

   &lt;!-- Declaration of views --&gt;

  &lt;/Views&gt;

  &lt;!-- Windows, ViewSets, NavigationalLinks, ComponentInterface, and ComponentUsages are parts necessary for runtime repository --&gt;

  &lt;Windows&gt;

   &lt;!-- Declaration of windows --&gt;

   &lt;Window id=&quot;ZCTI_COURSE_MIN/MainWindow&quot; default=&quot;TRUE&quot;&gt;

    &lt;InboundPlugs/&gt;

    &lt;OutboundPlugs/&gt;

    &lt;EmbeddedView id=&quot;CuCourseSearch.ZCTI_COURSE_RES/MainWindow&quot; default=&quot;TRUE&quot;/&gt;

    &lt;EmbeddedView id=&quot;CuCourseDetail.ZCTI_COURSE_OV/MainWindow&quot;/&gt;

   &lt;/Window&gt;

  &lt;/Windows&gt;

  &lt;ViewSets&gt;
 &lt;/ViewSets&gt;
  &lt;NavigationalLinks&gt;

   &lt;NavigationalLink name=&quot;NEW&quot;&gt;

    &lt;Source outboundPlugRef=&quot;NEW&quot; viewRef=&quot;CuCourseSearch.ZCTI_COURSE_RES/MainWindow&quot;/&gt;

    &lt;Targets&gt;

     &lt;Target inboundPlugRef=&quot;NEW&quot; viewRef=&quot;CuCourseDetail.ZCTI_COURSE_OV/MainWindow&quot;/&gt;

    &lt;/Targets&gt;

   &lt;/NavigationalLink&gt;

   &lt;NavigationalLink name=&quot;TODETAILS&quot;&gt;

    &lt;Source outboundPlugRef=&quot;DETAILS&quot; viewRef=&quot;CuCourseSearch.ZCTI_COURSE_RES/MainWindow&quot;/&gt;

    &lt;Targets&gt;

     &lt;Target inboundPlugRef=&quot;SHOWDETAILS&quot; viewRef=&quot;CuCourseDetail.ZCTI_COURSE_OV/MainWindow&quot;/&gt;

    &lt;/Targets&gt;

   &lt;/NavigationalLink&gt;

  &lt;/NavigationalLinks&gt;

  &lt;ComponentInterface id=&quot;&quot;&gt;

   &lt;!-- Declaration of Interface views and public parts of the component controller --&gt;

   &lt;InterfaceController&gt;

    &lt;Context&gt;

     &lt;ModelNode id=&quot;COURSE&quot;/&gt;

    &lt;/Context&gt;

    &lt;Events/&gt;

   &lt;/InterfaceController&gt;

  &lt;/ComponentInterface&gt;

  &lt;ComponentUsages&gt;

   &lt;!-- Declaration of the usage of other components --&gt;

   &lt;ComponentUsage id=&quot;CuCourseSearch&quot; usedComponent=&quot;ZCTI_COURSE_RES&quot;&gt;

    &lt;InterfaceView id=&quot;ZCTI_COURSE_RES/MainWindow&quot;&gt;

     &lt;InboundPlugs/&gt;

     &lt;OutboundPlugs&gt;

      &lt;OutboundPlug name=&quot;NEW&quot;/&gt;

      &lt;OutboundPlug name=&quot;DETAILS&quot;/&gt;

     &lt;/OutboundPlugs&gt;

    &lt;/InterfaceView&gt;

   &lt;/ComponentUsage&gt;

   &lt;ComponentUsage id=&quot;CuCourseDetail&quot; usedComponent=&quot;ZCTI_COURSE_OV&quot;&gt;

    &lt;InterfaceView id=&quot;ZCTI_COURSE_OV/MainWindow&quot;&gt;

     &lt;InboundPlugs&gt;

      &lt;InboundPlug name=&quot;NEW&quot;/&gt;

      &lt;InboundPlug name=&quot;SHOWDETAILS&quot;/&gt;

     &lt;/InboundPlugs&gt;

     &lt;OutboundPlugs/&gt;

    &lt;/InterfaceView&gt;

   &lt;/ComponentUsage&gt;

  &lt;/ComponentUsages&gt;

 &lt;/Component&gt;

&lt;/WebDynProDefinitions&gt;</layout>
   <event APPLNAME="ZCTI_COURSE_MIN" PAGEKEY="REPOSITORY.XML" EVHANDLER="ONCREATE" VERSION="A" EVHNAME="OnCreate">* this handler is called once the page is first created (stateful mode)
* it performs a once-off data initialization or object creation</event>
  </page>
  <page APPLNAME="ZCTI_COURSE_MIN" PAGEKEY="RUNTIMEREPOSITORYV2.DTD" PAGENAME="RuntimeRepositoryV2.dtd" MIMETYPE="text/xml" LIFETIME="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="DTD für BSP WD Komponenten-Repositories Version2">
   <layout>&lt;%@page language=&quot;abap&quot;%&gt;
&lt;%@include file=&quot;../../SAP/BSP_WD_BASE/Comp_DTD_content_V2.dtd&quot; %&gt;</layout>
  </page>
  <page APPLNAME="ZCTI_COURSE_MIN" PAGEKEY="WEBDYNPRO.DTD" PAGENAME="WebDynpro.dtd" MIMETYPE="text/xml" LIFETIME="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="DTD for BSP WD Component Repositories">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@include file=&quot;../../SAP/BSP_WD_BASE/Comp_DTD_content.dtd&quot; %&gt;</layout>
  </page>
 </WAPA>
 <WAPA APPLNAME="ZCTI_COURSE_OV" APPLEXT="ZCTI_COURSE_OV" STATEFUL="X" DEVCLASS="$TMP" ORIGLANG="E" MODIFLANG="E" TEXT="CTI Course Overview Page">
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="BSPWDCOMPONENT.DO" PAGENAME="BSPWDComponent.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller BSPWDComponent"/>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="COURSECUCO.DO" PAGENAME="CourseCuCo.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller CourseCuCo"/>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="COURSEHEADER.DO" PAGENAME="CourseHeader.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller CourseHeader"/>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="COURSEHEADER.HTM" PAGENAME="CourseHeader.htm" PAGETYPE="V" CONTROLLERURL="ZL_ZCTI_COU_COURSEHEADER_IMPL" MIMETYPE="text/html" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD View Layout CourseHeader">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@extension name=&quot;thtmlb&quot; prefix=&quot;thtmlb&quot; %&gt;
&lt;%@extension name=&quot;chtmlb&quot; prefix=&quot;chtmlb&quot; %&gt;
&lt;%@extension name=&quot;bsp&quot; prefix=&quot;bsp&quot; %&gt;
&lt;%
  data: lv_xml type string,
  lv_displayMode type crmt_boolean.
  lv_xml = controller-&gt;configuration_descr-&gt;get_config_data( ).
  lv_displayMode = controller-&gt;view_group_context-&gt;is_view_in_display_mode( controller ).
%&gt;
&lt;thtmlb:areaFrameSetter toolbarButtons  = &quot;&lt;%= controller-&gt;gt_button %&gt;&quot;
                        maxButtonNumber = &quot;3&quot;
                        displayMode     = &quot;&lt;%= lv_displayMode %&gt;&quot; /&gt;
&lt;chtmlb:config xml         = &quot;&lt;%= lv_xml %&gt;&quot;
               displayMode = &quot;&lt;%= lv_displayMode %&gt;&quot;
               mode        = &quot;RUNTIME&quot; /&gt;</layout>
   <parameter APPLNAME="ZCTI_COURSE_OV" PAGEKEY="COURSEHEADER.HTM" COMPNAME="COURSE" VERSION="A" PARDECLTYP="1" TYPTYPE="3" TYPE="ZL_ZCTI_COU_COURSEHEADER_CN00" ALIASNAME="COURSE"/>
  </page>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="COURSEOV.DO" PAGENAME="CourseOV.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller CourseOV"/>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="EMPTY.DO" PAGENAME="Empty.do" PAGETYPE="C" LIFETIME="2" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="Empty View"/>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="EMPTY.HTM" PAGENAME="empty.htm" PAGETYPE="V" CONTROLLERURL="CL_BSP_WD_VIEW_CONTR_EMPTY" MIMETYPE="text/html" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="Empty Page">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@extension name=&quot;htmlb&quot; prefix=&quot;htmlb&quot; %&gt;
&lt;!--
&lt;htmlb:group&gt;&lt;htmlb:groupBody&gt;
  &lt;/htmlb:groupBody&gt;&lt;/htmlb:group&gt;
--&gt;</layout>
  </page>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="MAINWINDOW.DO" PAGENAME="MainWindow.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller MainWindow"/>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="REPOSITORY.XML" PAGENAME="Repository.xml" MIMETYPE="text/xml" LIFETIME="1" STATE="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" NO_SCRIPT="X" VERSION="A" DEVCLASS="$TMP" LANGU="E">
   <layout>&lt;?xml version=&quot;1.0&quot;?&gt;

&lt;!DOCTYPE WebDynProDefinitions SYSTEM &quot;../bc/bsp/sap/BSP_WD_COMPBASE/RuntimeRepositoryV2.dtd&quot;&gt; 

&lt;WebDynProDefinitions version=&quot;2&quot;&gt;

 &lt;!-- Target BSP-component id (might be used during generation) --&gt;

 &lt;Component id=&quot;&quot;&gt;

  &lt;!-- Models, Controllers, and Views section only relevant for a designtime repository used for code generation--&gt;

  &lt;Models&gt;

   &lt;!-- Reference to BOL Component Set --&gt;

   &lt;Model id=&quot;ZCTI&quot;/&gt;

  &lt;/Models&gt;

  &lt;Controllers&gt;

   &lt;!-- Declaration of custom controllers --&gt;

   &lt;Controller id=&quot;BSPWDComponent&quot; type=&quot;COMPONENT&quot;/&gt;

  &lt;/Controllers&gt;

  &lt;Views&gt;

   &lt;!-- Declaration of views --&gt;

  &lt;/Views&gt;

  &lt;!-- Windows, ViewSets, NavigationalLinks, ComponentInterface, and ComponentUsages are parts necessary for runtime repository --&gt;

  &lt;Windows&gt;

   &lt;!-- Declaration of windows --&gt;

   &lt;Window id=&quot;ZCTI_COURSE_OV/MainWindow&quot; default=&quot;TRUE&quot;&gt;

    &lt;InboundPlugs/&gt;

    &lt;OutboundPlugs/&gt;

    &lt;EmbeddedView id=&quot;ZCTI_COURSE_OV/CourseOV&quot; default=&quot;TRUE&quot;/&gt;

   &lt;/Window&gt;

  &lt;/Windows&gt;

  &lt;ViewSets&gt;

   &lt;ViewSet id=&quot;ZCTI_COURSE_OV/CourseOV&quot;&gt;

    &lt;ViewArea id=&quot;OverviewPage&quot;&gt;

     &lt;EmbeddedView id=&quot;ZCTI_COURSE_OV/CourseHeader&quot; default=&quot;TRUE&quot;/&gt;

    &lt;/ViewArea&gt;

   &lt;/ViewSet&gt;

  &lt;/ViewSets&gt;

  &lt;NavigationalLinks&gt;
 &lt;/NavigationalLinks&gt;
  &lt;ComponentInterface id=&quot;&quot;&gt;

   &lt;!-- Declaration of Interface views and public parts of the component controller --&gt;

   &lt;InterfaceController&gt;

    &lt;Context&gt;

     &lt;ModelNode id=&quot;COURSE&quot;/&gt;

    &lt;/Context&gt;

    &lt;Events/&gt;

   &lt;/InterfaceController&gt;

   &lt;InterfaceView id=&quot;ZCTI_COURSE_OV/MainWindow&quot; mappedToWindow=&quot;ZCTI_COURSE_OV/MainWindow&quot;&gt;

    &lt;InboundPlugs&gt;

     &lt;InboundPlug name=&quot;NEW&quot;/&gt;

     &lt;InboundPlug name=&quot;SHOWDETAILS&quot;/&gt;

    &lt;/InboundPlugs&gt;

    &lt;OutboundPlugs/&gt;

   &lt;/InterfaceView&gt;

  &lt;/ComponentInterface&gt;

  &lt;ComponentUsages&gt;

   &lt;!-- Declaration of the usage of other components --&gt;

  &lt;/ComponentUsages&gt;

 &lt;/Component&gt;

&lt;/WebDynProDefinitions&gt;</layout>
   <event APPLNAME="ZCTI_COURSE_OV" PAGEKEY="REPOSITORY.XML" EVHANDLER="ONCREATE" VERSION="A" EVHNAME="OnCreate">* this handler is called once the page is first created (stateful mode)
* it performs a once-off data initialization or object creation</event>
  </page>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="RUNTIMEREPOSITORYV2.DTD" PAGENAME="RuntimeRepositoryV2.dtd" MIMETYPE="text/xml" LIFETIME="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="DTD für BSP WD Komponenten-Repositories Version2">
   <layout>&lt;%@page language=&quot;abap&quot;%&gt;
&lt;%@include file=&quot;../../SAP/BSP_WD_BASE/Comp_DTD_content_V2.dtd&quot; %&gt;</layout>
  </page>
  <page APPLNAME="ZCTI_COURSE_OV" PAGEKEY="WEBDYNPRO.DTD" PAGENAME="WebDynpro.dtd" MIMETYPE="text/xml" LIFETIME="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="DTD for BSP WD Component Repositories">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@include file=&quot;../../SAP/BSP_WD_BASE/Comp_DTD_content.dtd&quot; %&gt;</layout>
  </page>
 </WAPA>
 <WAPA APPLNAME="ZCTI_COURSE_RES" APPLEXT="ZCTI_COURSE_RES" STATEFUL="X" DEVCLASS="$TMP" ORIGLANG="E" MODIFLANG="E" TEXT="CTI Course Search Results Component">
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="BSPWDCOMPONENT.DO" PAGENAME="BSPWDComponent.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller BSPWDComponent"/>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="COURSECUCO.DO" PAGENAME="CourseCuCo.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller CourseCuCo"/>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="COURSESEARCHRESULTSVS.DO" PAGENAME="CourseSearchResultsVS.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller CourseSearchResultsVS"/>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="COURSESEARCHRESULTSVS.HTM" PAGENAME="CourseSearchResultsVS.htm" PAGETYPE="V" CONTROLLERURL="ZL_ZCTI_COU_COURSESEARCHR_IMPL" MIMETYPE="text/html" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD View Layout CourseSearchResultsVS">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@extension name=&quot;thtmlb&quot; prefix=&quot;thtmlb&quot; %&gt;
&lt;%@extension name=&quot;chtmlb&quot; prefix=&quot;chtmlb&quot; %&gt;
&lt;%@extension name=&quot;bsp&quot; prefix=&quot;bsp&quot; %&gt;
&lt;chtmlb:pageType type=&quot;SEARCH&quot; &gt;
  &lt;thtmlb:searchFrame&gt;
    &lt;thtmlb:searchCriteriaFrame&gt;
      &lt;thtmlb:searchArea&gt;
        &lt;thtmlb:searchTagArea&gt;
          &lt;bsp:call comp_id = &quot;&lt;%= controller-&gt;GET_VIEWAREA_CONTENT_ID( &apos;SearchVA&apos; ) %&gt;&quot;
                    url     = &quot;&lt;%= controller-&gt;GET_VIEWAREA_CONTENT_URL( &apos;SearchVA&apos; ) %&gt;&quot; /&gt;
        &lt;/thtmlb:searchTagArea&gt;
        &lt;thtmlb:searchButtonsArea&gt;
          &lt;thtmlb:button id      = &quot;SearcBtn&quot;
                         design  = &quot;EMPHASIZED&quot;
                         onClick = &quot;SEARCH&quot;
                         text    = &quot;Search&quot; /&gt;
          &lt;thtmlb:button id      = &quot;ClearBtn&quot;
                         onClick = &quot;CLEAR&quot;
                         text    = &quot;Clear&quot; /&gt;
        &lt;/thtmlb:searchButtonsArea&gt;
      &lt;/thtmlb:searchArea&gt;
    &lt;/thtmlb:searchCriteriaFrame&gt;
    &lt;thtmlb:searchResultFrame&gt;
      &lt;bsp:call comp_id = &quot;&lt;%= controller-&gt;GET_VIEWAREA_CONTENT_ID( &apos;ResultsVA&apos; ) %&gt;&quot;
                url     = &quot;&lt;%= controller-&gt;GET_VIEWAREA_CONTENT_URL( &apos;ResultsVA&apos; ) %&gt;&quot; /&gt;
    &lt;/thtmlb:searchResultFrame&gt;
  &lt;/thtmlb:searchFrame&gt;
&lt;/chtmlb:pageType&gt;
&lt;%-- &lt;thtmlb:grid cellSpacing = &quot;1&quot;
     columnSize  = &quot;1&quot;
     height      = &quot;100%&quot;
     rowSize     = &quot;2&quot;
     width       = &quot;100%&quot; &gt;
     &lt;thtmlb:gridCell colSpan     = &quot;1&quot;
     columnIndex = &quot;1&quot;
     rowIndex    = &quot;1&quot;
     rowSpan     = &quot;1&quot; &gt;
     &lt;bsp:call comp_id = &quot;&lt;%= controller-&gt;GET_VIEWAREA_CONTENT_ID( &apos;SearchVA&apos; ) %&gt;&quot;
     url     = &quot;&lt;%= controller-&gt;GET_VIEWAREA_CONTENT_URL( &apos;SearchVA&apos; ) %&gt;&quot; /&gt;
     &lt;/thtmlb:gridCell&gt;
     &lt;thtmlb:gridCell colSpan     = &quot;1&quot;
     columnIndex = &quot;1&quot;
     rowIndex    = &quot;2&quot;
     rowSpan     = &quot;1&quot; &gt;
     &lt;bsp:call comp_id = &quot;&lt;%= controller-&gt;GET_VIEWAREA_CONTENT_ID( &apos;ResultsVA&apos; ) %&gt;&quot;
     url     = &quot;&lt;%= controller-&gt;GET_VIEWAREA_CONTENT_URL( &apos;ResultsVA&apos; ) %&gt;&quot; /&gt;
     &lt;/thtmlb:gridCell&gt;
     &lt;/thtmlb:grid&gt; --%&gt;</layout>
  </page>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="EMPTY.DO" PAGENAME="Empty.do" PAGETYPE="C" LIFETIME="2" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="Empty View"/>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="EMPTY.HTM" PAGENAME="empty.htm" PAGETYPE="V" CONTROLLERURL="CL_BSP_WD_VIEW_CONTR_EMPTY" MIMETYPE="text/html" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="Empty Page">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@extension name=&quot;htmlb&quot; prefix=&quot;htmlb&quot; %&gt;
&lt;!--
&lt;htmlb:group&gt;&lt;htmlb:groupBody&gt;
  &lt;/htmlb:groupBody&gt;&lt;/htmlb:group&gt;
--&gt;</layout>
  </page>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="MAINWINDOW.DO" PAGENAME="MainWindow.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller MainWindow"/>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="REPOSITORY.XML" PAGENAME="Repository.xml" MIMETYPE="text/xml" LIFETIME="1" STATE="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" NO_SCRIPT="X" VERSION="A" DEVCLASS="$TMP" LANGU="E">
   <layout>&lt;?xml version=&quot;1.0&quot;?&gt;

&lt;!DOCTYPE WebDynProDefinitions SYSTEM &quot;../bc/bsp/sap/BSP_WD_COMPBASE/RuntimeRepositoryV2.dtd&quot;&gt; 

&lt;WebDynProDefinitions version=&quot;2&quot;&gt;

 &lt;!-- Target BSP-component id (might be used during generation) --&gt;

 &lt;Component id=&quot;&quot;&gt;

  &lt;!-- Models, Controllers, and Views section only relevant for a designtime repository used for code generation--&gt;

  &lt;Models&gt;

   &lt;!-- Reference to BOL Component Set --&gt;

   &lt;Model id=&quot;ZCTI&quot;/&gt;

  &lt;/Models&gt;

  &lt;Controllers&gt;

   &lt;!-- Declaration of custom controllers --&gt;

   &lt;Controller id=&quot;BSPWDComponent&quot; type=&quot;COMPONENT&quot;/&gt;

  &lt;/Controllers&gt;

  &lt;Views&gt;

   &lt;!-- Declaration of views --&gt;

  &lt;/Views&gt;

  &lt;!-- Windows, ViewSets, NavigationalLinks, ComponentInterface, and ComponentUsages are parts necessary for runtime repository --&gt;

  &lt;Windows&gt;

   &lt;!-- Declaration of windows --&gt;

   &lt;Window id=&quot;ZCTI_COURSE_RES/MainWindow&quot; default=&quot;TRUE&quot;&gt;

    &lt;InboundPlugs/&gt;

    &lt;OutboundPlugs/&gt;

    &lt;EmbeddedView id=&quot;ZCTI_COURSE_RES/CourseSearchResultsVS&quot; default=&quot;TRUE&quot;/&gt;

   &lt;/Window&gt;

  &lt;/Windows&gt;

  &lt;ViewSets&gt;

   &lt;ViewSet id=&quot;ZCTI_COURSE_RES/CourseSearchResultsVS&quot;&gt;

    &lt;ViewArea id=&quot;SearchVA&quot;&gt;

     &lt;EmbeddedView id=&quot;ZCTI_COURSE_RES/SearchView&quot; default=&quot;TRUE&quot;/&gt;

    &lt;/ViewArea&gt;

    &lt;ViewArea id=&quot;ResultsVA&quot;&gt;

     &lt;EmbeddedView id=&quot;ZCTI_COURSE_RES/ResultsView&quot; default=&quot;TRUE&quot;/&gt;

    &lt;/ViewArea&gt;

   &lt;/ViewSet&gt;

  &lt;/ViewSets&gt;

  &lt;NavigationalLinks&gt;
 &lt;/NavigationalLinks&gt;
  &lt;ComponentInterface id=&quot;&quot;&gt;

   &lt;!-- Declaration of Interface views and public parts of the component controller --&gt;

   &lt;InterfaceController&gt;

    &lt;Context/&gt;

    &lt;Events/&gt;

   &lt;/InterfaceController&gt;

   &lt;InterfaceView id=&quot;ZCTI_COURSE_RES/MainWindow&quot; mappedToWindow=&quot;ZCTI_COURSE_RES/MainWindow&quot;&gt;

    &lt;InboundPlugs/&gt;

    &lt;OutboundPlugs&gt;

     &lt;OutboundPlug name=&quot;NEW&quot;/&gt;

     &lt;OutboundPlug name=&quot;DETAILS&quot;/&gt;

    &lt;/OutboundPlugs&gt;

   &lt;/InterfaceView&gt;

  &lt;/ComponentInterface&gt;

  &lt;ComponentUsages&gt;

   &lt;!-- Declaration of the usage of other components --&gt;

  &lt;/ComponentUsages&gt;

 &lt;/Component&gt;

&lt;/WebDynProDefinitions&gt;</layout>
   <event APPLNAME="ZCTI_COURSE_RES" PAGEKEY="REPOSITORY.XML" EVHANDLER="ONCREATE" VERSION="A" EVHNAME="OnCreate">* this handler is called once the page is first created (stateful mode)
* it performs a once-off data initialization or object creation</event>
  </page>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="RESULTSVIEW.DO" PAGENAME="ResultsView.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller ResultsView"/>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="RESULTSVIEW.HTM" PAGENAME="ResultsView.htm" PAGETYPE="V" CONTROLLERURL="ZL_ZCTI_COU_RESULTSVIEW_IMPL" MIMETYPE="text/html" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD View Layout ResultsView">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@extension name=&quot;thtmlb&quot; prefix=&quot;thtmlb&quot; %&gt;
&lt;%@extension name=&quot;chtmlb&quot; prefix=&quot;chtmlb&quot; %&gt;
&lt;%@extension name=&quot;bsp&quot; prefix=&quot;bsp&quot; %&gt;
&lt;chtmlb:configTable actionsMaxInRow       = &quot;5&quot;
                    navigationMode        = &quot;BYPAGE&quot;
                    allRowsEditable       = &quot;FALSE&quot;
                    downloadToExcel       = &quot;TRUE&quot;
                    id                    = &quot;ResTable&quot;
                    onRowSelection        = &quot;select&quot;
                    personalizable        = &quot;TRUE&quot;
                    actions               = &quot;&lt;%= controller-&gt;gt_buttons %&gt;&quot;
                    selectedRowIndex      = &quot;&lt;%= RESULTS-&gt;SELECTED_INDEX %&gt;&quot;
                    selectedRowIndexTable = &quot;&lt;%= RESULTS-&gt;SELECTION_TAB %&gt;&quot;
                    selectionMode         = &quot;&lt;%= RESULTS-&gt;SELECTION_MODE %&gt;&quot;
                    table                 = &quot;//RESULTS/Table&quot;
                    usage                 = &quot;EDITLIST&quot;
                    visibleFirstRow       = &quot;&lt;%= RESULTS-&gt;VISIBLE_FIRST_ROW_INDEX %&gt;&quot;
                    visibleRowCount       = &quot;6&quot;
                    width                 = &quot;100%&quot;
                    xml                   = &quot;&lt;%= controller-&gt;configuration_descr-&gt;get_config_data( ) %&gt;&quot; /&gt;</layout>
   <parameter APPLNAME="ZCTI_COURSE_RES" PAGEKEY="RESULTSVIEW.HTM" COMPNAME="RESULTS" VERSION="A" PARDECLTYP="1" TYPTYPE="3" TYPE="ZL_ZCTI_COU_RESULTSVIEW_CN00" ALIASNAME="RESULTS"/>
  </page>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="RUNTIMEREPOSITORYV2.DTD" PAGENAME="RuntimeRepositoryV2.dtd" MIMETYPE="text/xml" LIFETIME="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="DTD für BSP WD Komponenten-Repositories Version2">
   <layout>&lt;%@page language=&quot;abap&quot;%&gt;
&lt;%@include file=&quot;../../SAP/BSP_WD_BASE/Comp_DTD_content_V2.dtd&quot; %&gt;</layout>
  </page>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="SEARCHVIEW.DO" PAGENAME="SearchView.do" PAGETYPE="C" BROWSER_CACHE="0 " SERVER_CACHE="0 " LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD Controller SearchView"/>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="SEARCHVIEW.HTM" PAGENAME="SearchView.htm" PAGETYPE="V" CONTROLLERURL="ZL_ZCTI_COU_SEARCHVIEW_IMPL" MIMETYPE="text/html" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="BSP WD View Layout SearchView">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@extension name=&quot;thtmlb&quot; prefix=&quot;thtmlb&quot; %&gt;
&lt;%@extension name=&quot;chtmlb&quot; prefix=&quot;chtmlb&quot; %&gt;
&lt;%@extension name=&quot;bsp&quot; prefix=&quot;bsp&quot; %&gt;
&lt;chtmlb:config xml  = &quot;&lt;%= controller-&gt;configuration_descr-&gt;get_config_data( ) %&gt;&quot;
               mode = &quot;RUNTIME&quot; /&gt;</layout>
   <parameter APPLNAME="ZCTI_COURSE_RES" PAGEKEY="SEARCHVIEW.HTM" COMPNAME="RESULTS" VERSION="A" PARDECLTYP="1" TYPTYPE="3" TYPE="ZL_ZCTI_COU_SEARCHVIEW_CN01" ALIASNAME="RESULTS"/>
   <parameter APPLNAME="ZCTI_COURSE_RES" PAGEKEY="SEARCHVIEW.HTM" COMPNAME="SEARCH" VERSION="A" PARDECLTYP="1" TYPTYPE="3" TYPE="ZL_ZCTI_COU_SEARCHVIEW_CN00" ALIASNAME="SEARCH"/>
  </page>
  <page APPLNAME="ZCTI_COURSE_RES" PAGEKEY="WEBDYNPRO.DTD" PAGENAME="WebDynpro.dtd" MIMETYPE="text/xml" LIFETIME="1" BROWSER_CACHE="0 " SERVER_CACHE="0 " STRIPMODE="2" LAYOUTLANGU="E" VERSION="A" DEVCLASS="$TMP" LANGU="E" DESCRIPT="DTD for BSP WD Component Repositories">
   <layout>&lt;%@page language=&quot;abap&quot; %&gt;
&lt;%@include file=&quot;../../SAP/BSP_WD_BASE/Comp_DTD_content.dtd&quot; %&gt;</layout>
  </page>
 </WAPA>
 <DLCC CONTEXT_ID="E7BCFBE4C8184B9292966A1B03CF76CAE1BF14D6" COMPONENT="ZCTI_COURSE_RES" VIEWNAME="SEARCHVIEW" ROLE_KEY="&lt;DEFAULT&gt;" COMPONENT_USAGE="&lt;DEFAULT&gt;" OBJECT_TYPE="&lt;DEFAULT&gt;" OBJECT_SUB_TYPE="&lt;DEFAULT&gt;" CHANGED_AT="00000000" MASTERLANG="E">
  <CONFIG>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPGdyaWQgZ3JpZHR5cGU9IjE2Q29sdW1uMlBhbmVsIiByb3dzPSIyICIgY29scz0iMTYgIiB3aWR0aD0iMTAwJSI+CiA8Z3JpZGNlbGwgY29sPSIxIiByb3c9IjEiIGNvbHNwYW49IjMiPgogIDxsYWJlbCBmb3I9Ii8vU0VBUkNIL1NUUlVDVC5JRCIvPgogPC9ncmlkY2VsbD4KIDxncmlkY2VsbCBjb2w9IjQiIHJvdz0iMSIgY29sc3Bhbj0iNSI+CiAgPGlucHV0ZmllbGQgaWQ9Ii8vU0VBUkNIL1NUUlVDVC5JRCIgdmFsdWU9Ii8vU0VBUkNIL1NUUlVDVC5JRCIgbWFuZGF0b3J5PSIiIGRpc2FibGVkPSIiLz4KIDwvZ3JpZGNlbGw+CiA8Z3JpZGNlbGwgY29sPSIxIiByb3c9IjIiIGNvbHNwYW49IjMiPgogIDxsYWJlbCBmb3I9Ii8vU0VBUkNIL1NUUlVDVC5OQU1FIi8+CiA8L2dyaWRjZWxsPgogPGdyaWRjZWxsIGNvbD0iNCIgcm93PSIyIiBjb2xzcGFuPSI1Ij4KICA8aW5wdXRmaWVsZCBpZD0iLy9TRUFSQ0gvU1RSVUNULk5BTUUiIHZhbHVlPSIvL1NFQVJDSC9TVFJVQ1QuTkFNRSIgbWFuZGF0b3J5PSIiIGRpc2FibGVkPSIiLz4KIDwvZ3JpZGNlbGw+CjwvZ3JpZD4=</CONFIG>
  <PARAMETERS>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4=</PARAMETERS>
 </DLCC>
 <DLCC CONTEXT_ID="1DF5DB64C7FEFB0183AE0334EE87E0B2036F5F43" COMPONENT="ZCTI_COURSE_RES" VIEWNAME="RESULTSVIEW" ROLE_KEY="&lt;DEFAULT&gt;" COMPONENT_USAGE="&lt;DEFAULT&gt;" OBJECT_TYPE="&lt;DEFAULT&gt;" OBJECT_SUB_TYPE="&lt;DEFAULT&gt;" CHANGED_AT="00000000" MASTERLANG="E">
  <CONFIG>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHRhYmxlQ29uZmlnPgogIDxoZWFkZXJEZWZpbml0aW9uIGhvcml6b250YWxNb2RlPSIiIHZpc2libGVSb3dzPSIxMCAiIHZpc2libGVSb3dzQmVmU2Nyb2xsPSIiLz4KICA8Y29sdW1uRGVmaW5pdGlvbiBkaXNhYmxlZD0iIiBoQWxpZ25tZW50PSJMRUZUIiBoaWRkZW49IiIgbWFuZGF0b3J5PSIiIG5hbWU9IlNUUlVDVC5JRCIgdGl0bGVJRD0iLy9SRVNVTFRTL1NUUlVDVC5JRCIgd2lkdGg9IiIvPgogIDxjb2x1bW5EZWZpbml0aW9uIGRpc2FibGVkPSIiIGhBbGlnbm1lbnQ9IkxFRlQiIGhpZGRlbj0iIiBtYW5kYXRvcnk9IiIgbmFtZT0iU1RSVUNULk5BTUUiIHRpdGxlSUQ9Ii8vUkVTVUxUUy9TVFJVQ1QuTkFNRSIgd2lkdGg9IiIvPgogIDxjb2x1bW5EZWZpbml0aW9uIGRpc2FibGVkPSIiIGhBbGlnbm1lbnQ9IkxFRlQiIGhpZGRlbj0iIiBtYW5kYXRvcnk9IiIgbmFtZT0iU1RSVUNULkZFRSIgdGl0bGVJRD0iLy9SRVNVTFRTL1NUUlVDVC5GRUUiIHdpZHRoPSIiLz4KPC90YWJsZUNvbmZpZz4=</CONFIG>
  <PARAMETERS>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4=</PARAMETERS>
 </DLCC>
 <DLCC CONTEXT_ID="5C50507DD9800F3844EB2C2D675FC2D72468FF21" COMPONENT="ZCTI_COURSE_OV" VIEWNAME="COURSEHEADER" ROLE_KEY="&lt;DEFAULT&gt;" COMPONENT_USAGE="&lt;DEFAULT&gt;" OBJECT_TYPE="&lt;DEFAULT&gt;" OBJECT_SUB_TYPE="&lt;DEFAULT&gt;" CHANGED_AT="00000000" MASTERLANG="E">
  <CONFIG>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPGdyaWQgZ3JpZHR5cGU9IjE2Q29sdW1uMVBhbmVsIiByb3dzPSIzICIgY29scz0iMTYgIiB3aWR0aD0iMTAwJSI+CiA8Z3JpZGNlbGwgY29sPSIxIiByb3c9IjEiIGNvbHNwYW49IjMiPgogIDxsYWJlbCBmb3I9Ii8vQ09VUlNFL1NUUlVDVC5JRCIvPgogPC9ncmlkY2VsbD4KIDxncmlkY2VsbCBjb2w9IjQiIHJvdz0iMSIgY29sc3Bhbj0iNSI+CiAgPGlucHV0ZmllbGQgaWQ9Ii8vQ09VUlNFL1NUUlVDVC5JRCIgdmFsdWU9Ii8vQ09VUlNFL1NUUlVDVC5JRCIgbWFuZGF0b3J5PSIiIGRpc2FibGVkPSJYIi8+CiA8L2dyaWRjZWxsPgogPGdyaWRjZWxsIGNvbD0iOSIgcm93PSIxIiBjb2xzcGFuPSIzIj4KICA8bGFiZWwgZm9yPSIvL0NPVVJTRS9TVFJVQ1QuTkFNRSIvPgogPC9ncmlkY2VsbD4KIDxncmlkY2VsbCBjb2w9IjEyIiByb3c9IjEiIGNvbHNwYW49IjUiPgogIDxpbnB1dGZpZWxkIGlkPSIvL0NPVVJTRS9TVFJVQ1QuTkFNRSIgdmFsdWU9Ii8vQ09VUlNFL1NUUlVDVC5OQU1FIiBtYW5kYXRvcnk9IlgiIGRpc2FibGVkPSIiLz4KIDwvZ3JpZGNlbGw+CiA8Z3JpZGNlbGwgY29sPSIxIiByb3c9IjIiIGNvbHNwYW49IjMiPgogIDxsYWJlbCBmb3I9Ii8vQ09VUlNFL1NUUlVDVC5GRUUiLz4KIDwvZ3JpZGNlbGw+CiA8Z3JpZGNlbGwgY29sPSI0IiByb3c9IjIiIGNvbHNwYW49IjUiPgogIDxpbnB1dGZpZWxkIGlkPSIvL0NPVVJTRS9TVFJVQ1QuRkVFIiB2YWx1ZT0iLy9DT1VSU0UvU1RSVUNULkZFRSIgbWFuZGF0b3J5PSJYIiBkaXNhYmxlZD0iIi8+CiA8L2dyaWRjZWxsPgogPGdyaWRjZWxsIGNvbD0iMSIgcm93PSIzIiBjb2xzcGFuPSIzIj4KICA8bGFiZWwgZm9yPSIvL0NPVVJTRS9TVFJVQ1QuREVUQUlMUyIvPgogPC9ncmlkY2VsbD4KIDxncmlkY2VsbCBjb2w9IjQiIHJvdz0iMyIgY29sc3Bhbj0iMTMiPgogIDxpbnB1dGZpZWxkIGlkPSIvL0NPVVJTRS9TVFJVQ1QuREVUQUlMUyIgdmFsdWU9Ii8vQ09VUlNFL1NUUlVDVC5ERVRBSUxTIiBtYW5kYXRvcnk9IiIgZGlzYWJsZWQ9IiIvPgogPC9ncmlkY2VsbD4KPC9ncmlkPg==</CONFIG>
  <PARAMETERS>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4=</PARAMETERS>
 </DLCC>
 <DLCC CONTEXT_ID="685BF62252E3B9A11ABD0AE02A1AD98665D1F43C" COMPONENT="ZCTI_COURSE_OV" VIEWNAME="COURSEOV" ROLE_KEY="&lt;DEFAULT&gt;" COMPONENT_USAGE="&lt;DEFAULT&gt;" OBJECT_TYPE="&lt;DEFAULT&gt;" OBJECT_SUB_TYPE="&lt;DEFAULT&gt;" CHANGED_AT="00000000" MASTERLANG="E">
  <CONFIG>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPGFzeDphYmFwIHhtbG5zOmFzeD0iaHR0cDovL3d3dy5zYXAuY29tL2FiYXB4bWwiIHZlcnNpb249IjEuMCI+PGFzeDp2YWx1ZXM+PEJTUF9ETENfT1ZXX0FTU0dOTV9YTUw+PExBWU9VVD5PdmVydmlldzwvTEFZT1VUPjxST1dTLz48Q09MUy8+PEhFSUdIVC8+PFdJRFRILz48VElMRV9MQVlPVVRfSUQvPjxWSUVXUz48QlNQX0RMQ19PVldfQVNTR05NPjxBUFBMX1ZJRVdOQU1FPlpDVElfQ09VUlNFX09WL0NvdXJzZUhlYWRlcjwvQVBQTF9WSUVXTkFNRT48QlNQX0FQUEw+WkNUSV9DT1VSU0VfT1Y8L0JTUF9BUFBMPjxWSUVXTkFNRT5Db3Vyc2VIZWFkZXI8L1ZJRVdOQU1FPjxUSVRMRV9SRUY+Ly9aQ1RJX0NPVVJTRV9PVi9DT1VSU0VIRUFERVI8L1RJVExFX1JFRj48VFlQRS8+PFRSQVlNT0RFPkU8L1RSQVlNT0RFPjxTRVFVRU5DRT4wMDAxPC9TRVFVRU5DRT48Q09MX0lELz48Uk9XX0lELz48Q09MU1BBTi8+PFJPV1NQQU4vPjxXSURUSC8+PEhFSUdIVC8+PFRJTEVfSUQ+MDwvVElMRV9JRD48V1JBUFBJTkcvPjxBSkFYX0RILz48SUNPTl9JRC8+PERJU1BMQVlfTU9ERS8+PC9CU1BfRExDX09WV19BU1NHTk0+PC9WSUVXUz48L0JTUF9ETENfT1ZXX0FTU0dOTV9YTUw+PC9hc3g6dmFsdWVzPjwvYXN4OmFiYXA+</CONFIG>
  <PARAMETERS>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4=</PARAMETERS>
 </DLCC>
</nugget>
